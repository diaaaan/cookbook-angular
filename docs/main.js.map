{"version":3,"sources":["./src/app/services/favorite-service/favorite.service.ts","./src/app/components/user/users/users.component.ts","./src/app/components/user/users/users.component.html","./src/app/components/ui/welcome-message/welcome-message.component.ts","./src/app/components/ui/welcome-message/welcome-message.component.html","./src/app/services/user-service/user.service.ts","./src/app/services/draft-service/draft-service.service.ts","./src/app/components/user/user-blogs/user-blogs.component.ts","./src/app/components/user/user-blogs/user-blogs.component.html","./src/app/components/blog/all-blog-entries/all-blog-entries.component.ts","./src/app/components/blog/all-blog-entries/all-blog-entries.component.html","./src/app/components/ui/draft-blog-admin/draft-blog-admin.component.ts","./src/app/components/ui/draft-blog-admin/draft-blog-admin.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/admin/services/admin.service.ts","./src/app/components/blog/update-blog/update-blog.component.ts","./src/app/components/blog/update-blog/update-blog.component.html","./src/app/components/ui/recipe-step/recipe-step.component.ts","./src/app/components/ui/recipe-step/recipe-step.component.html","./src/app/components/ui/delete-blog-admin/delete-blog-admin.component.ts","./src/app/components/ui/delete-blog-admin/delete-blog-admin.component.html","./src/app/components/ui/ingredients/ingredients.component.ts","./src/app/components/ui/ingredients/ingredients.component.html","./src/app/components/user/user-profile/user-profile.component.ts","./src/app/components/user/user-profile/user-profile.component.html","./src/app/components/user/personal-profile/personal-profile.component.ts","./src/app/components/user/personal-profile/personal-profile.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/guards/admin.guard.ts","./src/app/guards/auth.guard.ts","./src/app/services/authentification-service/authentication.service.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/services/function-service/function.service.ts","./src/app/app.module.ts","./src/app/components/blog/create-blog-entry/create-blog-entry.component.ts","./src/app/components/blog/create-blog-entry/create-blog-entry.component.html","./src/app/components/ui/full-view-image/full-view-image.component.ts","./src/app/components/ui/full-view-image/full-view-image.component.html","./src/app/components/blog/view-blog-entry/view-blog-entry.component.ts","./src/app/components/blog/view-blog-entry/view-blog-entry.component.html","./src/app/services/blog-service/blog.service.ts","./src/app/components/ui/delele-blog/delele-blog.component.ts","./src/app/components/ui/delele-blog/delele-blog.component.html","./src/app/components/ui/snackbar/snackbar.component.ts","./src/app/components/ui/snackbar/snackbar.component.html","./src/app/interceptors/jwt.interceptor.ts","./src/app/components/user/update-user-profile/update-user-profile.component.ts","./src/app/components/user/update-user-profile/update-user-profile.component.html","./src/app/components/user/user-drafts/user-drafts.component.ts","./src/app/components/user/user-drafts/user-drafts.component.html","./src/app/components/user/user-favorites/user-favorites.component.html","./src/app/components/user/user-favorites/user-favorites.component.ts","./src/app/app-routing.module.ts","./src/app/services/tag-service/tag.service.ts","./src/app/config.service.ts","./src/app/step.directive.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoriteService {\n\n  constructor(private http: HttpClient) { }\n\n  createFavPost(blogDto): Observable<any> {\n    return this.http.post<any>('/api/favorite', blogDto);\n  }\n\n  getUsersFavPosts(user): Observable<any> {\n    return this.http.get('/api/favorite/user/' + user);\n  }\n\n   findOneBlog(id: string): Observable<any> {\n    return this.http.get<any>('/api/favorite/' + id);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, tap } from 'rxjs/operators';\nimport { UserData, UserService } from 'src/app/services/user-service/user.service';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent implements OnInit {\n\n\n  filterValue: string = null;\n  dataSource: UserData = null;\n  pageEvent: PageEvent;\n  displayedColumns: string[] = ['name', 'nickname', 'email', 'role'];\n\n  constructor(private userService: UserService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.initDataSource();\n  }\n\n  initDataSource() {\n    this.userService.findAll(1,10).pipe(\n      map((userData: UserData) => this.dataSource = userData)\n    ).subscribe();\n  }\n\n  onPaginateChange(event: PageEvent) {\n    let page = event.pageIndex;\n    let size = event.pageSize;\n\n    if(this.filterValue == null) {\n      page = page + 1\n      this.userService.findAll(page, size).pipe(\n        map((userData: UserData) => this.dataSource = userData)\n      ).subscribe();\n    } else {\n      page = page + 1\n      this.userService.paginateByName(page, size, this.filterValue).pipe(\n        map((userData: UserData) => this.dataSource = userData)\n      ).subscribe();\n    }\n   \n  }\n\n  findByName(nickname: string) { \n    this.userService.paginateByName(1, 10, nickname).pipe(\n      map((userData: UserData) => this.dataSource = userData)\n    ).subscribe();\n  }\n\n  navigateToProfile(id) {\n    this.router.navigate(['./' + id], {relativeTo: this.activatedRoute});\n  }\n}\n","<h1 style=\"text-align: center;\">All users</h1>\n\n<mat-form-field>\n    <mat-label>Filter by username</mat-label>\n    <input matInput type=\"text\" [(ngModel)]=\"filterValue\"\n    (input)=\"findByName(filterValue)\" placeholder=\"Search by username\">\n\n</mat-form-field>\n<div *ngIf=\"dataSource\">\n    <mat-table [dataSource]=\"dataSource.docs\">\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"(click)=\"navigateToProfile(row._id)\"></mat-row>\n\n            <ng-container matColumnDef=\"id\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">{{row._id}}</mat-cell>\n            </ng-container>\n\n            \n            <ng-container matColumnDef=\"name\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">{{row.name}}</mat-cell>\n            </ng-container>\n\n            \n            <ng-container matColumnDef=\"nickname\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Nickname</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">{{row.nickname}}</mat-cell>\n            </ng-container>\n\n            \n            <ng-container matColumnDef=\"email\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">{{row.email}}</mat-cell>\n            </ng-container>\n\n            \n            <ng-container matColumnDef=\"role\">\n                <mat-header-cell *matHeaderCellDef mat-sort-header>Role</mat-header-cell>\n                <mat-cell *matCellDef=\"let row\">{{row.role}}</mat-cell>\n            </ng-container>\n\n    </mat-table>\n\n    <mat-paginator [length]=\"dataSource.totalDocs\"\n                   [pageSize]=\"dataSource.limit\"\n                   [pageSizeOptions]=\"[5, 10, 50, 100]\"\n                   (page)=\"pageEvent = $event; onPaginateChange($event)\"\n                   showFirstLastButtons>\n    </mat-paginator>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-welcome-message',\n  templateUrl: './welcome-message.component.html',\n  styleUrls: ['./welcome-message.component.scss']\n})\nexport class WelcomeMessageComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateTo(value) {\n    this.router.navigate(['../', value]);\n  }\n\n}\n","<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\n<div class=\"main-div welcome-div\">\n    <div class=\"container\">\n        <div class=\"row row-cols-2\">\n          <div class=\"col all-quote\">\n              <small>Поль Бокюз</small>\n              <h1>Счастье живет на кухне</h1>\n              <div class=\"quote\">\n                <p>\n                  Не следует, однако забывать, что начало повседневной работы по формированию \n                  позиции в значительной степени обуславливает создание направлений прогрессивного \n                  развития. Товарищи! дальнейшее развитие различных форм деятельности представляет \n                  собой интересный эксперимент проверки дальнейших направлений развития. \n                </p>\n              </div>\n             \n              <button mat-raised-button (click)=\"navigateTo('profile')\" class=\"join-button\">Присоединиться!</button>\n          </div>\n        </div>\n      </div>\n</div>\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { User } from 'src/app/model/user.interface';\nimport { AuthenticationService } from '../authentification-service/authentication.service';\n\nexport interface UserData {\n  docs: User[],\n  totalDocs: number,\n  limit: number,\n  totalPages: number,\n  page: number,\n  pagingCounter: number,\n  hasPrevPage: boolean,\n  hasNextPage: boolean,\n  prevPage: number\n  }\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient,\n              private authService: AuthenticationService\n    ) { }\n\n  _nickname = new Subject<User>();\n\n  setNickname() {\n    console.log('set nickname');    \n    let userId = this.authService.getUserId();\n    this.findOne(userId).pipe(\n      map((user: User) => this._nickname.next(user))\n    ).subscribe();\n    \n    // this._nickname.next(user);\n    console.log(this._nickname);\n    \n  }\n\n  // apply(o: {\n  //   nickname: string\n  // }) {\n  //   this._nickname.next(o.nickname);\n  // }\n\n\n  findOne(id: string): Observable<User> {\n    console.log('Сервис - user.service: findOne() из user.service.ts начал свою работу');\n    console.log('Сервис - user.service: findOne() из user.service.ts. Получил id и вернул user', id);\n    console.log('Сервис - user.service: findOne() из user.service.ts завершил свою работу');\n    \n    return this.http.get('/api/user/' + id);\n  }\n\n  updateOne(user): Observable<User> {\n    console.log('Сервис - user.service: updateOne() из user.service.ts начал свою работу');    \n    console.log('Сервис - user.service: updateOne() из user.service.ts. Получает user ->', user);    \n    console.log('Сервис - user.service: updateOne() из user.service.ts. Берет user.id ->', user.id);    \n    console.log('Сервис - user.service: updateOne() из user.service.ts. Возвращает на бэкенд сторону запрос ->', this.http.put('api/user/' + user.id, user));    \n    console.log('Сервис - user.service: updateOne() из user.service.ts завершает свою работу');        \n    return this.http.put('api/user/' + user.id, user);\n  }\n\n\n  findAll(page: number, size: number): Observable<UserData> {\n    let params = new HttpParams();\n\n    params = params.append('page', String(page));\n    params = params.append('limit', String(size));\n\n    return this.http.get('/api/user', {params}).pipe(\n      map((userData: UserData) => userData),\n      catchError(err => throwError(err))\n    )\n  }\n\n  uploadProfileImage(formData: FormData): Observable<any> {\n    return this.http.post<FormData>('/api/user/upload', formData, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  paginateByName(page: number, size: number, nickname: string): Observable<UserData> {\n    let params = new HttpParams();\n\n    params = params.append('page', String(page));\n    params = params.append('limit', String(size));\n    params = params.append('nickname', String(nickname));\n\n    return this.http.get('/api/user', {params}).pipe(\n      map((userData: UserData) => userData),\n      catchError(err => throwError(err))\n    )\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DraftServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  getUsersDraftPosts(user): Observable<any> {\n    return this.http.get('/api/draft/draft/' + user);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { BlogEntriesPageable } from 'src/app/model/blog.interface';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { DeleleBlogComponent } from '../../ui/delele-blog/delele-blog.component';\n\n@Component({\n  selector: 'app-user-blogs',\n  templateUrl: './user-blogs.component.html',\n  styleUrls: ['./user-blogs.component.scss']\n})\nexport class UserBlogsComponent implements OnInit {\n\n  blogEntriesLength: number = 0\n\n  @Input() blogEntries: BlogEntriesPageable;\n  constructor(\n    private router: Router,\n    private blogService: BlogService,\n    public dialog: MatDialog\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n\n  navigate(id) {\n    this.router.navigateByUrl('blogs/' + id);\n  }\n\n  navigateToUpdate(id) {\n    this.router.navigate(['update-blog/', id]);\n  }\n\n  openDeleteDialog(blog): void {\n    // this.blogService.isBeDeleted = blogId;\n    const dialogRef = this.dialog.open(DeleleBlogComponent, {data: {blog}});\n  }\n\n\n}\n","<!-- <div *ngIf=\"blogEntriesLength > 0; else placeholderNullPosts\"> -->\n<div style=\"margin-top: 3%;\">\n    <mat-card>\n        В этом разделе собраны все созданные вами рецепты, которые прошли модерацию. Другие пользователи могут видеть их.\n    </mat-card>\n    <mat-card *ngFor=\"let blog of blogEntries\" class=\"card\">\n        <div>\n            <button mat-icon-button [matMenuTriggerFor]=\"menu\" type=\"button\" aria-label=\"Users menu\" class=\"users-menu\">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                <button mat-menu-item (click)=\"navigateToUpdate(blog._id)\">\n                    <mat-icon>edit</mat-icon>\n                    <span>Редактировать рецепт</span>\n                </button>\n                <button mat-menu-item (click)=\"openDeleteDialog(blog)\">\n                    <mat-icon color=\"warn\">delete</mat-icon>\n                    <span class=\"delete-button\">Удалить рецепт</span>\n                </button>\n            </mat-menu>\n            <div style=\"display: flex;\" (click)=\"navigate(blog._id)\">\n                <div>\n                    <img *ngIf=\"blog.headerImage; else placeholderImage\"\n                        src=\"http://localhost:3000/api/blogs/image/{{blog.headerImage}}\">\n                </div>\n                <ng-template #placeholderImage>\n                    <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\">\n                </ng-template>\n                <div style=\"margin-left: 30px;\">\n                    <h2>\n                        {{blog.title}}\n                    </h2>\n                    <h4 class=\"crop-text-2 \">{{blog.description}}</h4>\n                    <small>Категория:</small>\n                    <h4>{{blog.category.catTitle}}</h4>\n\n                </div>\n            </div>\n            <!-- <hr />\n            <mat-card-actions style=\"margin-left: 1%;\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                    <mat-chip *ngFor=\"let tag of blog.tags\">{{tag}}</mat-chip>\n                </mat-chip-list>\n            </mat-card-actions> -->\n        </div>\n    </mat-card>\n    <!-- </div> -->\n    <!-- \n    <ng-template #placeholderNullPosts>\n        <div class=\"placeholderNullPosts\">\n            <h1>\n                У вас еще нет созданных рецептов\n            </h1>\n            <img src=\"../../../assets/placeholders/placeholder-emptyposts-girl.jpg\" class=\"placeholderNullPosts-image\">\n        </div>\n    </ng-template> -->\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BlogDto, BlogEntriesPageable } from 'src/app/model/blog.interface';\nimport { User } from 'src/app/model/user.interface';\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { DeleleBlogComponent } from '../../ui/delele-blog/delele-blog.component';\nimport { IngredientsComponent } from '../../ui/ingredients/ingredients.component';\n\n\n@Component({\n  selector: 'app-all-blog-entries',\n  templateUrl: './all-blog-entries.component.html',\n  styleUrls: ['./all-blog-entries.component.scss']\n})\nexport class AllBlogEntriesComponent implements OnInit {\n\n  @Input() blogEntries: BlogEntriesPageable;\n  @Output() paginate: EventEmitter<PageEvent> = new EventEmitter<PageEvent>();\n\n\n  dataSource$: Observable<BlogEntriesPageable> = this.blogService.indexAll(1, 10);\n  categorySource$: Observable<any> = this.functionService.getAllCategory();\n\n  // userId$ = this.authService.getUserId();\n\n  // isLiked = this.likeBlog(this.dataSource$.pipe) \n  pageEvent: PageEvent;\n  isJoined: boolean = false;\n  panelOpenState = false;\n\n  constructor(private router: Router,\n    private blogService: BlogService,\n    private authService: AuthenticationService,\n    private functionService: FunctionService,\n    public dialog: MatDialog\n    ) { }\n\n  ngOnInit(): void {\n   const getUserId = this.authService.getUserId();\n    if (getUserId !=null) {\n      this.isJoined = true;\n      this.userId = getUserId\n    }\n  }\n\n  isLiked = false;\n  userId: string = '0';\n  value = '';\n  allCategories = []\n\n  openDialog() {\n    console.log('Modal here');\n    \n    const dialogRef = this.dialog.open(IngredientsComponent, {\n      width: '100%', height: '70%'\n      // data: {name: this.name, animal: this.animal}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      // this.animal = result;\n    });\n  }\n\n  onPaginateChange(event: PageEvent) {\n    console.log(event);\n    // let page = event.pageIndex;\n    // let limit = event.pageSize;\n\n    // page = page +1;\n    event.pageIndex = event.pageIndex + 1;\n    // event.previousPageIndex = event.previousPageIndex +1;\n    this.paginate.emit(event);\n    // console.log(event);\n    \n\n    // this.dataSource = this.blogService.indexAll(page, limit);\n    // this.paginate.emit(event)\n  }\n  \n  navigate(id) {\n    this.router.navigateByUrl('blogs/' + id);\n  }\n\n  navigateToUpdate(id) {\n    this.router.navigate(['update-blog/', id]);\n  }\n\n  // likeLog() {\n  //   this.isLiked = true\n  // }\n\n  likeBlog(blog: BlogDto) {\n    const userId = this.authService.getUserId();\n    console.log('likeblog');    \n    this.blogService.toggle(blog, userId)\n    // this.blogService.toggle(blog).subscribe(x => { } );\n  }\n\n  editBlog(blog) {\n    console.log(blog);\n    \n  }\n\n  deleteBlog(blog) {\n    this.blogService.deleteBlogByUser(blog).subscribe();\n  }\n}\n","<app-welcome-message *ngIf=\"isJoined === false\"></app-welcome-message>\n<div class=\"row row-cols-5 search d-flex justify-content-center align-items-center\">\n  <div class=\"col what-to-cook\">\n    <p>\n      Что хотите приготовить?\n    </p>\n  </div>\n  <div class=\"col\">\n    <mat-form-field class=\"example-form-field\">\n      <mat-label>Название блюда</mat-label>\n      <input matInput type=\"text\" [(ngModel)]=\"value\">\n      <button mat-button *ngIf=\"value\" matSuffix mat-icon-button (click)=\"value=''\">\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-form-field>\n    <!-- <input type=\"text\" placeholder=\"Любое блюдо, ингридиент или категория\"> -->\n  </div>\n  <div class=\"col\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Выберите категорию</mat-label>\n      <mat-select>\n        <mat-option>Любая категория</mat-option>\n        <mat-option *ngFor=\"let category of (categorySource$ | async)\" [value]=\"category.catTitle\">{{category.catTitle}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <!-- <mat-form-field>\n            <mat-select placeholder=\"Select Level of Education\" name=\"education_level\" (selectionChange)=\"educationLevelChangeAction(education_level)\" [(ngModel)]=\"education_level\" >\n              <mat-option *ngFor=\"let education of educationList\" [value]=\"education\" >{{ education.educationLevelName }}</mat-option>\n            </mat-select>\n          </mat-form-field> -->\n\n  </div>\n  <div class=\"col expansion-panel\">\n    <button mat-stroked-button (click)=\"openDialog()\" class=\"ingredients-button\">Ингредиенты</button>\n  </div>\n  <div class=\"col\">\n    <button mat-raised-button class=\"find-button\">Подобрать рецепты</button>\n  </div>\n</div>\n<div class=\"container\">\n  <h2>Новые рецепты от наших пользователей</h2>\n  <div *ngIf=\"blogEntries?.docs\">\n    <div class=\"row row-cols-4\">\n      <div class=\"col\" *ngFor=\"let blog of blogEntries?.docs; let i = index\">\n        <mat-card class=\"card\">\n          <div (click)=\"navigate(blog._id)\">\n            <img class=\"blog-image\" *ngIf=\"blog.headerImage; else placeholderBlogImage\"\n              src=\"http://localhost:3000/api/blogs/image/{{blog.headerImage}}\">\n            <ng-template #placeholderBlogImage>\n              <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\" class=\"blog-image\">\n            </ng-template>\n            <div class=\"col\">\n              <small>{{blog.timeForCooking}} минут</small>\n              <h2 class=\"crop-text\" style=\"margin: 0;\">\n                {{blog.title}}\n              </h2>\n              <p class=\"crop-text-2\">{{blog.description}}</p>\n              <ng-template #placeholderImage>\n                <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\" class=\"user-image\">\n              </ng-template>\n    \n            </div>\n          </div>\n          <div class=\"author row\">\n            <div class=\"col-4\" >\n              <img *ngIf=\"blog.authorId.profileImage; else placeholderImage\" src=\"http://localhost:3000/api/user/profile-image/{{blog.authorId.profileImage}}\" class=\"user-image\">\n            </div>\n            <div class=\"col\" >\n              <mat-card-subtitle style=\"margin-top:5px; margin-bottom: 5px;\">{{blog.authorId.name}}</mat-card-subtitle>\n              <mat-card-subtitle>{{blog.createdAt | date}}</mat-card-subtitle>\n            </div>\n          </div>\n          <div class=\"bookmark-icon\" *ngIf=\"isJoined === true\">\n            <mat-icon color=\"accent\" matTooltip=\"Добавить рецепт в избранное\" style=\"cursor: pointer;\" type=\"button\" (click)=\"addPostToFavorites(post)\" class=\"bookmark-icon\" >bookmark</mat-icon> \n          </div>\n  \n        </mat-card>\n  \n      \n      </div>\n  \n      \n  \n    \n    </div>\n    <mat-paginator *ngIf=\"blogEntries?.docs\" [length]=\"blogEntries?.totalDocs\" [pageSize]=\"blogEntries?.limit\"\n    [pageSizeOptions]=\"[5, 10, 50, 100]\" (page)=\"pageEvent = $event; onPaginateChange($event)\" showFirstLastButtons>\n  \n  </mat-paginator>\n  \n  </div>\n</div>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { tap } from 'rxjs/operators';\nimport { AdminService } from 'src/app/admin/services/admin.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\n\n@Component({\n  selector: 'app-draft-blog-admin',\n  templateUrl: './draft-blog-admin.component.html',\n  styleUrls: ['./draft-blog-admin.component.scss']\n})\nexport class DraftBlogAdminComponent implements OnInit {\n\n  draftBlogName: string;\n  snackBarMessage: string = 'Рецепт был успешно отклонен!';\n\n\n  constructor(\n    public dialogRef: MatDialogRef<DraftBlogAdminComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private functionService: FunctionService,\n    private adminService: AdminService\n\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    this.draftBlogName = this.data.blog.title;\n\n  }\n\n  draftBlog() {\n\n    // this.blogService.post(blog).pipe(\n    //   tap(() => this.functionService.openSnackBar(this.snackBarMessageAccepted))\n    // ).subscribe();\n\n    // this.adminService.updateIsAcceptedStatus(blog._id).subscribe();\n    // window.location.reload();\n\n    const blogId = this.data._id;\n    this.adminService.updateIsDraftStatus(blogId)\n    .pipe(\n      tap(() => this.functionService.openSnackBar(this.snackBarMessage))\n    ).subscribe(); \n    document.location.reload();\n  }\n\n\n}\n","<h1 mat-dialog-title>Вы отклоняете рецепт {{draftBlogName |lowercase}}</h1>\n<div mat-dialog-content>\n    Если у вас есть комментарии, напишите их в данную форму\n</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close cdkFocusInitial>Отменить</button>\n  <!-- <button mat-button mat-dialog>Продолжить</button> -->\n  <button mat-stroked-button color=\"warn\" [mat-dialog-close]=\"true\" (click)=\"draftBlog()\">Отклонить</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Observable } from 'rxjs';\nimport { BlogEntriesPageable } from 'src/app/model/blog.interface';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n\n  blogEntries$: Observable<BlogEntriesPageable> = this.blogService.indexAll(1, 10);\n\n  constructor(private blogService: BlogService) { }\n  \n\n  onPaginateChange(event: PageEvent) {\n    this.blogEntries$ = this.blogService.indexAll(event.pageIndex, event.pageSize);\n  }\n\n}\n","<div class=\"home-component\">\r\n    <app-all-blog-entries \r\n[blogEntries]=\"(blogEntries$ | async)\"\r\n(paginate)=\"onPaginateChange($event)\"></app-all-blog-entries>\r\n</div>\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  constructor(private http: HttpClient) { }\n\n  paginatePostsForModeration(page: number, size: number): Observable<any> {\n    let params = new HttpParams();\n\n    params = params.append('page', String(page));\n    params = params.append('limit', String(size));\n    \n    return this.http.get('/api/moderator', {params});\n  }\n\n  getUsersFavPosts(user): Observable<any> {\n    return this.http.get('/api/favorite/user/' + user);\n  }\n\n  paginatePostForModerationByAuthorId(id: string): Observable<any> {\n    // let params = new HttpParams();\n\n    // params = params.append('page', String(page));\n    // params = params.append('limit', String(size));\n    \n    return this.http.get('/api/moderator/user/'+ id);\n  }\n\n  updateIsAcceptedStatus(id): Observable<any> {\n    return this.http.put('/api/moderator/' + id, {isRecipieAccepted: true});\n  }\n\n  updateIsDraftStatus(id): Observable<any> {\n    return this.http.put('/api/moderator/' + id, {isRecipieDraft: true});\n  }\n\n  findOnePostForModerate(id: string): Observable<any> {\n    return this.http.get<any>('/api/moderator/' + id);\n  }\n\n  deletePost(blogId): Observable<any> {\n    return this.http.delete('/api/moderator/' + blogId)\n  }\n\n  draftPost(blogId): Observable<any> {\n    return this.http.post('/api/draft/', blogId)\n  }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { BlogDto } from 'src/app/model/blog.interface';\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { TagService } from 'src/app/services/tag-service/tag.service';\nimport { UserService } from 'src/app/services/user-service/user.service';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FullViewImageComponent } from '../../ui/full-view-image/full-view-image.component';\n\n\nexport interface File {\n  data: any;\n  progress: number;\n  inProgress: boolean;\n}\n\n@Component({\n  selector: 'app-update-blog',\n  templateUrl: './update-blog.component.html',\n  styleUrls: ['./update-blog.component.scss']\n})\nexport class UpdateBlogComponent implements OnInit {\n\n  ingredientSource$: Observable<any> = this.functionService.getAllIngredients();\n  tagsSource$: Observable<any> = this.tagService.getAllTags();\n  categorySource$: Observable<any> = this.functionService.getAllCategory();\n\n  form: FormGroup;\n  ingredient: any;\n  formGroup: FormGroup;\n  formArray: FormArray;\n\n  blogCategory;\n  blogTitle;\n\n  snackBarMessage: string = 'Рецепт успешно обновлен!';\n  snackBarImageMessage: string = 'Фотография успешно обновлена!'\n  snackBarInfoMessage: string = 'Информация успешно обновлена!'\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER];\n  tagCtrl = new FormControl();\n  tags: string[] = [];\n  ingredients: string[] = [];\n\n  measures: any[] = [\n    { value: 'гр.' },\n    { value: 'стакан' },\n    { value: 'чайн. л.' },\n    { value: 'ст. л.' },\n    { value: 'дес. л.' },\n    { value: 'шт.' },\n    { value: 'кусок' },\n    { value: 'щепотка' },\n    { value: 'на вкус' },\n    { value: 'л.' },\n    { value: 'мл.' },\n\n  ];\n\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n  @ViewChild(\"fileUpload\", { static: false }) fileUpload: ElementRef;\n\n  file: File = {\n    data: null,\n    inProgress: false,\n    progress: 0\n  };\n\n  constructor(\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private functionService: FunctionService,\n    private tagService: TagService,\n    private authService: AuthenticationService,\n    private blogService: BlogService,\n    private userService: UserService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      const blogId = params.get('id');\n      this.blogService.findOneBlog(blogId).subscribe(blog => {\n        this.form = new FormGroup({\n          _id: new FormControl(blogId),\n          title: new FormControl(blog.title),\n          description: new FormControl(blog.description),\n          headerImage: new FormControl(blog.headerImage),\n          timeForCooking: new FormControl(blog.timeForCooking),\n          category: new FormControl(blog.category),\n          servings: new FormControl(blog.servings)\n        });\n        this.blogCategory = blog.category;\n        this.blogTitle = blog.title;\n      });\n    })\n  }\n\n  updateImage() {\n    const fileInput = this.fileUpload.nativeElement;\n    fileInput.click();\n    fileInput.onchange = () => {\n      this.file = {\n        data: fileInput.files[0],\n        inProgress: false,\n        progress: 0\n      };\n      this.fileUpload.nativeElement.value = '';\n      this.uploadFile();\n    }\n  }\n\n  uploadFile() {\n    const formData = new FormData();\n    formData.append('file', this.file.data);\n    this.file.inProgress = true;\n\n    this.blogService.uploadHeaderImage(formData).pipe(\n      map((event) => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            this.file.progress = Math.round(event.loaded * 100 / event.total);\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.file.inProgress = false;\n        return of('Upload failed');\n      })\n    ).subscribe((event: any) => {\n      if (typeof (event) === 'object') {\n        this.form.patchValue({ headerImage: event.body.filename });\n        this.functionService.openSnackBar(this.snackBarImageMessage);\n      }\n    })\n  }\n\n  updateBlog() {\n    this.blogService.updateUserBlog(this.form.getRawValue()).subscribe();\n    this.functionService.openSnackBar(this.snackBarInfoMessage);\n    this.router.navigate(['../profile']);\n  }\n\n  showFullImage(postImage): void {\n    const link = 'blogs/image/'\n    const dialogRef = this.dialog.open(FullViewImageComponent, { data: { link, postImage } });\n  }\n\n}\n","<form [formGroup]=\"form\" *ngIf=\"form\" (ngSubmit)=\"updateBlog()\">\n    <div class=\"main-div\" style=\"margin: 0;\">\n        <div class=\"row\" style=\"margin: 0;\">\n            <div class=\"col\"></div>\n            <div class=\"col-6\">\n                <div>\n                    <mat-card class=\"container\">\n                        <div style=\"margin-top: 3%;\">\n                            <p class=\"post-create\">ВЫ ИЗМЕНЯЕТЕ РЕЦЕПТ: {{blogTitle}}</p>\n                        </div>\n                        <hr width=\"100%\" />\n                        <div class=\"row title-category-div\">\n                            <p class=\"headers-text\" style=\"padding: 0;\">Название блюда и категория блюда</p>\n\n                            <div class=\"col\" style=\"padding-left: 0;\">\n                                <div class=\"post-title-div\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-label>Название блюда</mat-label>\n                                        <input matInput formControlName=\"title\">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"col\" style=\"padding-right: 0;\">\n                                <div class=\"category-div\">\n                                    <mat-form-field appearance=\"fill\">\n                                        <mat-select [(ngModel)]=\"blogCategory._id\" formControlName=\"category\">\n                                            <mat-option *ngFor=\"let category of (categorySource$ | async)\"\n                                                [value]=\"category._id\">{{category.catTitle}}</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"post-image\">\n                            <mat-label class=\"headers-text\">Фото готового блюда</mat-label>\n                            <mat-card style=\"margin-top: 3%\">\n                                <img class=\"post-image-img\" *ngIf=\"form.get('headerImage').value\"\n                                    src=\"http://localhost:3000/api/blogs/image/{{form.get('headerImage').value}}\"\n                                    (click)=\"showFullImage(form.get('headerImage').value)\">\n                                <mat-progress-bar *ngIf=\"file.progress\" [value]=\"file.progress\" style=\"margin-top: 3%;\">\n                                </mat-progress-bar>\n                                <mat-card-actions>\n                                    <div class=\"d-flex justify-content-center\">\n                                        <button mat-button type=\"button\" (click)=\"updateImage()\" class=\"update-button\">\n                                            <mat-icon style=\"color: rgb(25, 199, 25);\">cloud_upload</mat-icon> Обновить\n                                            фотографию\n                                        </button>\n                                    </div>\n                                </mat-card-actions>\n                            </mat-card>\n                            <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" accept=\"image/*\"\n                                style=\"display:none;\">\n                        </div>\n                        \n                        <hr width=\"80%\" />\n\n                        <div class=\"post-description\">\n                            <div class=\"col\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label class=\"headers-text\">Описание блюда</mat-label>\n                                    <textarea class=\"post-textarea\" matInput formControlName=\"description\">\n                                    </textarea>\n                                    <mat-hint>\n                                        Обязательно напишите 2-3 строки - что это за блюдо, его особенности, вкусовые\n                                        качества.\n                                        Этот текст будет показываться в качестве анонса к Вашему рецепту - и именно по\n                                        этому тексту люди будут определять, стоит читать Ваш рецепт - или нет.\n                                    </mat-hint>\n                                </mat-form-field>\n                            </div>\n                        </div>\n\n                        <hr width=\"80%\" />\n\n                        <div class=\"row\" style=\"width: 100%; margin-top: 2%;\">\n                            <div class=\"col\">\n                                <div class=\"col-4\"></div>\n                                <p class=\"headers-text\">Количество порций</p>\n                                <div class=\"col-2\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <input matInput type=\"number\" class=\"servings\" formControlName=\"servings\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-4\"></div>\n                            </div>\n                            <div class=\"col row\">\n                                <p class=\"headers-text\">Время приготовления</p>\n\n                                <!-- <div class=\"col-4\" style=\"background-color: blue;\">1</div> -->\n                                <div class=\"col-3\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <input matInput type=\"number\" class=\"servings\" formControlName=\"timeForCooking\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col container\">\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\"></div>\n                                    <div class=\"col\" style=\" width: 100%;\">\n                                        <p class=\"text-left\">минут</p>\n                                    </div>\n                                    <div class=\"col-3\"></div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <hr width=\"80%\" />\n                        \n                        <button mat-flat-button color=\"primary\" class=\"addToModerateButton\" [disabled]=\"form.invalid\"\n                            type=\"submit\" (click)=\"updateBlog()\">Обновить рецепт</button>\n                    </mat-card>\n                </div>\n            </div>\n            <div class=\"col\">\n            </div>\n        </div>\n    </div>\n</form>","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-step',\n  templateUrl: './recipe-step.component.html',\n  styleUrls: ['./recipe-step.component.scss']\n})\nexport class RecipeStepComponent implements OnInit {\n\n  @Input() title: string;\n  status: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div>{{title}} <button>Edit</button></div>\n    <input type=\"checkbox\" [value]=\"status\">\n  </div>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AdminService } from 'src/app/admin/services/admin.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\n\n@Component({\n  selector: 'app-delete-blog-admin',\n  templateUrl: './delete-blog-admin.component.html',\n  styleUrls: ['./delete-blog-admin.component.scss']\n})\nexport class DeleteBlogAdminComponent implements OnInit {\n\n  deleteBlogName: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteBlogAdminComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private functionService: FunctionService,\n    private adminService: AdminService\n\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  \n\n  ngOnInit(): void {\n    this.deleteBlogName = this.data.blog.title;\n  }\n\n  snackBarMessage: string = 'Рецепт, нарушающий правила, был успешно удален!'\n\n  deleteBlog() {\n    const blogId = this.data.blog._id;\n    \n    this.adminService.deletePost(blogId).subscribe(); \n    // this.blogService.isBeDeleted = null\n    this.functionService.openSnackBar(this.snackBarMessage)\n    document.location.reload();\n  }\n\n}\n","<h1 mat-dialog-title>Вы собираетесь удалить рецепт {{deleteBlogName | lowercase}}</h1>\n<div mat-dialog-content>Вы уверенны? Отменить действие не получится. Пожалуйста, удаляйте рецепты, которые нарушают\n  правила пользования сайтом</div>\n<div mat-dialog-actions>\n  <button mat-button mat-dialog-close cdkFocusInitial>Отменить</button>\n  <!-- <button mat-button mat-dialog>Продолжить</button> -->\n  <button mat-stroked-button color=\"warn\" [mat-dialog-close]=\"true\" (click)=\"deleteBlog()\">Удалить</button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-ingredients',\n  templateUrl: './ingredients.component.html',\n  styleUrls: ['./ingredients.component.scss']\n})\nexport class IngredientsComponent implements OnInit {\n\n  ingredientSource$: Observable<any> = this.functionService.getAllIngredients();\n\n\n  constructor(\n    public dialogRef: MatDialogRef<IngredientsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private functionService: FunctionService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field appearance=\"fill\">\n    <mat-label>Выберите ингредиент</mat-label>\n    <mat-select>\n      <mat-option>-</mat-option>\n      <mat-option  *ngFor=\"let ingredient of (ingredientSource$ | async)\" [value]=\"ingredient.ingTitleRu\">{{ingredient.ingTitleRu}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable, Observer, Subscription } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BlogDto, BlogEntriesPageable } from 'src/app/model/blog.interface';\nimport { User } from 'src/app/model/user.interface';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { UserService } from 'src/app/services/user-service/user.service';\nimport { FullViewImageComponent } from '../../ui/full-view-image/full-view-image.component';\n\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent {\n\n\n  panelOpenState = false;\n\n\n\n  private userId$: Observable<string> = this.activatedRoute.params.pipe(\n    map((params: Params) => (params['id']))\n  )\n  // private sub: Subscription;\n  // user: User = null;\n\n\n  user$: Observable<User> = this.userId$.pipe(\n    switchMap((userId: string) => this.userService.findOne(userId)) \n  )\n\n  blogEntries$: Observable<BlogDto> = this.userId$.pipe(\n    switchMap((userId: string) => this.blogService.indexByUser(userId)),\n    tap((a) => console.log(a))\n  )\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private userService: UserService,\n    private blogService: BlogService,\n    public dialog: MatDialog\n  ) {  }\n\n  onPaginateChange(event: PageEvent) {\n    return this.userId$.pipe(\n      tap((userId: string) => this.blogEntries$ = this.blogService.indexByUser(userId))\n    ).subscribe();\n  }\n\n  showFullImage(postImage): void {\n    const link = 'user/profile-image/'\n    const dialogRef = this.dialog.open(FullViewImageComponent, {data: {link, postImage}});\n  }\n\n  \n  navigate(id) {\n    this.router.navigateByUrl('blogs/' + id);\n  }\n  // ngOnInit(): void {\n  //   this.sub = this.activatedRoute.params.subscribe(params => {\n  //     this.userId = (params['id']);\n  //     this.userService.findOne(this.userId).pipe(\n  //       map((user: User) => this.user = user)\n  //     ).subscribe()\n  //   });\n  // }\n\n\n  // ngOnDestroy() {\n\n  //   this.sub.unsubscribe();\n  //   //Called once, before the instance is destroyed.\n  //   //Add 'implements OnDestroy' to the class.\n    \n  // }\n}\n","<div class=\"container\">\n    <div *ngIf=\"(user$ | async) as user\" class=\"row\" style=\"padding-left: 2%; padding-right: 2%; margin: 0;\">\n        <div class=\"col-4\">\n            <mat-card class=\"avatar-image\">\n                <img *ngIf=\"user.profileImage; else placeholderImage\" src=\"http://localhost:3000/api/user/profile-image/{{user.profileImage}}\" (click)=\"showFullImage(user.profileImage)\" class=\"user-image\">\n            </mat-card>\n            <ng-template #placeholderImage>\n                <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\" class=\"user-image\">\n            </ng-template>\n        </div>\n        <div class=\"col\">\n            <mat-card class=\"user-info\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <small>Имя пользователя:</small>\n                        <h1>{{user.name}}</h1>\n                    </div>\n                    <div class=\"col\">\n                    </div>\n                    <!-- <div class=\"col d-flex align-items-center\"> \n                        \n                        <button class=\"block-user-button\">  \n                            Заблокировать пользователя\n                        </button>\n                    </div> -->\n                    \n                    <hr/>\n                    <small>Описание:</small>\n                    <h3> <p style=\"text-indent: 20px;\">\n                            {{user.userDescription}}\n                        </p>\n                    </h3>\n                    <hr/>\n\n                </div> \n                    <!-- <div class=\"row\">\n                        <div class=\"col-2\">\n                            <small>Роль:</small>\n                            <h3 [ngClass]=\"user.role == 'user' ? 'make-user' : 'make-admin'\"> \n                                {{user.role}}\n                            </h3>\n                            <a href=\"\" *ngIf=\"user.role == 'user'; else placeholderRole\">Назначить админом</a>\n                            <ng-template #placeholderRole>\n                                <a href=\"\">Понизить роль до user</a>\n                            </ng-template>\n                        </div>\n                        <div class=\"col-4\">\n                        </div>\n                        <div class=\"col\"></div>\n                       \n                    </div> -->\n            </mat-card>\n            <div>\n              \n            </div>\n        </div>\n        \n        <mat-accordion style=\"margin-top: 3%;\">\n            <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                                (closed)=\"panelOpenState = false\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Рецепты пользователя\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{panelOpenState ? 'Скрыть рецепты пользователя' : 'Показать рецепты пользователя'}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n                    <!-- <div *ngIf=\"blogEntriesLength > 0; else placeholderNullPosts\"> -->\n                        <div class=\"container\">\n                                <div class=\"row row-cols-4\">\n                                    <mat-card *ngFor=\"let blog of (blogEntries$ | async)\"  class=\"col card\">\n                                      \n                                        <div class=\"row\" (click)=\"navigate(blog._id)\">\n                                            <div class=\"col\">\n                                                <img class=\"image-img\" *ngIf=\"blog.headerImage; else placeholderImage\" src=\"http://localhost:3000/api/blogs/image/{{blog.headerImage}}\">\n                                                <ng-template #placeholderImage>\n                                                    <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\">\n                                                </ng-template>\n                                            </div>\n                                            <div class=\"col\">\n                                                    <h2>\n                                                        {{blog.title}}\n                                                    </h2>\n                                                    <small>Категория:</small>\n                                                    <p>{{blog.category.catTitle}}</p>\n                                                   \n                                                  \n                                    \n                                            </div>\n                                        \n                                       \n                                        </div>\n                                        <mat-card-actions>\n                                            <div style=\"margin-left: 4%;\">\n                                            </div>\n                                            <div class=\"col tag-div\">\n                                                <mat-chip-list>\n                                                    <mat-chip\n                                                    *ngFor=\"let tag of blog.tags\">{{tag}}\n                                                    </mat-chip>\n                                                </mat-chip-list> \n                                            </div>\n                                           \n                                          </mat-card-actions>\n                                        <!-- <div style=\"display: flex;\"> -->\n                                      \n                                           \n                                        <!-- </div> -->\n                                    </mat-card>\n                                </div>\n                        \n                                <!-- <mat-paginator \n                                [length]=\"(dataSource).totalDocs\"\n                                [pageSize]=\"(dataSource).limit\"\n                                [pageSizeOptions]=\"[5, 10, 50, 100]\"\n                                (page)=\"pageEvent = $event; onPaginateChange($event)\"\n                                showFirstLastButtons>\n                            \n                                </mat-paginator> -->\n                        </div>\n                        \n                        \n    \n            </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { AdminService } from 'src/app/admin/services/admin.service';\nimport { BlogDto } from 'src/app/model/blog.interface';\nimport { User } from 'src/app/model/user.interface';\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { DraftServiceService } from 'src/app/services/draft-service/draft-service.service';\nimport { FavoriteService } from 'src/app/services/favorite-service/favorite.service';\nimport { UserService } from 'src/app/services/user-service/user.service';\nimport { FullViewImageComponent } from '../../ui/full-view-image/full-view-image.component';\n\n\n@Component({\n  selector: 'app-personal-profile',\n  templateUrl: './personal-profile.component.html',\n  styleUrls: ['./personal-profile.component.scss'],\n  // encapsulation: ViewEncapsulation.None\n})\nexport class PersonalProfileComponent implements OnInit {\n\n\n  user: any;\n  dataSource: BlogDto = null;\n\n  private userId$: Observable<string> = this.authService.observeGetUserId();\n\n  user$: Observable<User> = this.userId$.pipe(\n    switchMap((userId: string) => this.userService.findOne(userId)) \n  )\n\n  blogEntries$: Observable<BlogDto> = this.userId$.pipe(\n    switchMap((userId: string) => this.blogService.indexByUser(userId)),\n    tap((a) => console.log(a))\n  )\n\n  favEntries$: Observable<any> = this.userId$.pipe(\n    switchMap((userId) => this.favService.getUsersFavPosts(userId)),\n    tap((a) => console.log(a))\n  )\n\n  draftEntries$: Observable<any> = this.userId$.pipe(\n    switchMap((userId) => this.adminService.paginatePostForModerationByAuthorId(userId)),\n    tap(() => console.log('here')),\n    tap((a) => console.log(a)\n      )\n  )\n\n\n\n  form: FormGroup;\n\n\n  constructor(private router: Router,\n    private adminService: AdminService,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private blogService: BlogService,\n    public dialog: MatDialog,\n    private favService: FavoriteService,\n    private draftService: DraftServiceService\n  ) {  \n\n  }\n\n  ngOnInit(): void {\n    console.log(this.blogEntries$);\n}\n\n\nnavigateTo(value) {\n  this.router.navigate(['../', value]);\n}\n\nnavigateToAdmin(value) {\n  this.router.navigate(['../admin/', value]);\n}\n\nshowFullImage(postImage): void {\n  const link = 'user/profile-image/'\n  const dialogRef = this.dialog.open(FullViewImageComponent, {data: {link, postImage}});\n}\n\n}\n","<div class=\"main-div\" style=\"margin: 0;\">\n    <div *ngIf=\"(user$ | async) as user\" class=\"row\" style=\"padding-left: 2%; padding-right: 2%; margin: 0;\">\n        <div class=\"col\">\n            <mat-card class=\"avatar-image\">\n                <img *ngIf=\"user.profileImage; else placeholderImage\"\n                    src=\"http://localhost:3000/api/user/profile-image/{{user.profileImage}}\"\n                    (click)=\"showFullImage(user.profileImage)\" class=\"user-image\">\n            </mat-card>\n            <ng-template #placeholderImage>\n                <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\"\n                    (click)=\"showFullImage(post.headerImage)\" class=\"user-image\">\n            </ng-template>\n            <div style=\"margin-top: 3%; text-align:center\">\n                {{user.userDescription}}\n            </div>\n            <div *ngIf=\"user.role === 'admin'\" style=\"margin-top: 5%;\">\n                <small>Администрирование</small>\n                <button mat-raised-button class=\"admin-button\" (click)=\"navigateToAdmin('admin-main')\" color=\"primary\"\n                    type=\"button\">\n                    Перейти к разделу администратора\n                </button>\n            </div>\n            <div style=\"margin-top: 5%;\">\n                <button mat-raised-button class=\"admin-button\" color=\"primary\" type=\"button\"\n                    (click)=\"navigateTo('update-profile')\">\n                    Настройки\n                </button>\n            </div>\n        </div>\n        <div class=\"col-6\">\n\n            <mat-tab-group mat-stretch-tabs>\n                <!-- #docregion mat-tab-content -->\n                <mat-tab label=\"Ваши рецепты\">\n                    <ng-template matTabContent>\n                        <app-user-blogs [blogEntries]=\"(blogEntries$ | async)\"></app-user-blogs>\n                    </ng-template>\n                </mat-tab>\n                <!-- #enddocregion mat-tab-content -->\n                <mat-tab label=\"Избранное\">\n                    <ng-template matTabContent>\n                        <app-user-favorites [favEntries]=\"(favEntries$ | async)\"></app-user-favorites>\n                    </ng-template>\n                </mat-tab>\n                <!-- #enddocregion mat-tab-content -->\n                <mat-tab label=\"Черновики\">\n                    <ng-template matTabContent>\n                        <app-user-drafts [draftEntries]=\"(draftEntries$ | async)\"></app-user-drafts>\n                    </ng-template>\n                </mat-tab>\n            </mat-tab-group>\n\n\n        </div>\n        <div class=\"col\">\n            <mat-card class=\"user-info\">\n                <div>\n                    Здравствуйте,\n                    <h1>{{user.name}}</h1>\n                </div>\n            </mat-card>\n            <div>\n                <button mat-raised-button class=\"post-button\" color=\"primary\" type=\"button\"\n                    (click)=\"navigateTo('create-blog-entry')\">\n                    Написать рецепт\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #placeholderNullPosts>\n    <div class=\"placeholderNullPosts\">\n        <h1>\n            У вас еще нет созданных рецептов\n        </h1>\n        <img src=\"../../../assets/placeholders/placeholder-emptyposts-girl.jpg\" class=\"placeholderNullPosts-image\">\n    </div>\n</ng-template>","<mat-toolbar color=\"primary\">  \r\n    <mat-toolbar-row>\r\n      <span routerLink=\"/home\" class=\"home-link\">Cook book</span>\r\n      <span class=\"example-spacer\"></span>\r\n\r\n      <span *ngIf=\"loggedUser || toolbarName\">\r\n        <!-- <button mat-flat-button routerLink=\"users\">Users</button> -->\r\n        <button mat-flat-button style=\"margin-left: 20px;\" class=\"create-post\" routerLink=\"create-blog-entry\">Написать рецепт</button>\r\n      </span>\r\n\r\n      <!-- <span *ngIf=\"user; else isNotLogged\" (click)=\"navigateTo('profile')\" class=\"home-link\">{{user.name}}</span> -->\r\n      <ng-template #isNotLogged>\r\n        <span (click)=\"navigateTo('login')\" class=\"not-logged\">\r\n          <span class=\"material-icons login-icon\">\r\n            perm_identity\r\n            </span>\r\n          Создать рецепт\r\n        </span>\r\n      </ng-template>\r\n\r\n      <div *ngIf=\"loggedUser || toolbarName; else isNotLogged\">\r\n\r\n          <div *ngIf=\"loggedUser\">\r\n            <!-- <img mat-card-avatar src=\"http://localhost:3000/api/user/profile-image/{{loggedUser.profileImage}}\"> -->\r\n    \r\n            <mat-form-field style=\"margin-left: 20px;\" name=\"loginRegisterDropdown\">\r\n            <!-- <button mat-flat-button style=\"margin-left: 20px;\" routerLink=\"admin\">Admin</button> -->\r\n              <mat-select placeholder=\"{{loggedUser.name}}\">\r\n                <!-- <mat-option (click)=\"navigateTo('login')\">Login</mat-option>\r\n                <mat-option (click)=\"navigateTo('register')\">register</mat-option> -->\r\n                <mat-option (click)=\"navigateTo('profile')\">Профиль</mat-option>\r\n                <mat-option (click)=\"navigateTo('update-profile')\">Настройки</mat-option>\r\n                <mat-option (click)=\"logout()\">Выйти</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n    \r\n          </div>\r\n    \r\n    \r\n          <div *ngIf=\"toolbarName\">\r\n            <!-- <img mat-card-avatar class=\"header-image\" src=\"http://localhost:3000/api/user/profile-image/{{toolbarName.profileImage}}\"> -->\r\n            <mat-form-field style=\"margin-left: 20px;\" name=\"loginRegisterDropdown\">\r\n              <mat-select placeholder=\"{{toolbarName.name}}\">\r\n                <!-- <mat-option (click)=\"navigateTo('login')\">Login</mat-option>\r\n                <mat-option (click)=\"navigateTo('register')\">register</mat-option> -->\r\n                <mat-option (click)=\"navigateTo('profile')\">Профиль</mat-option>\r\n                <mat-option (click)=\"navigateTo('update-profile')\">Настройки</mat-option>\r\n                <mat-option (click)=\"logout()\">Выйти</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </div>\r\n   \r\n\r\n      </div>\r\n\r\n     \r\n\r\n    \r\n\r\n      \r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <router-outlet></router-outlet>\r\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-eOJMYsd53ii+scO/bJGFsiCZc+5NDVN2yr8+0RDqr0Ql0h+rP48ckxlpbzKgwra6\" crossorigin=\"anonymous\">\r\n\r\n  \r\n  \r\n  \r\n  <!-- Copyright 2020 Google LLC. All Rights Reserved.\r\n      Use of this source code is governed by an MIT-style license that\r\n      can be found in the LICENSE file at http://angular.io/license -->","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { ConfigService } from './config.service';\r\nimport { User } from './model/user.interface';\r\nimport { AuthenticationService } from './services/authentification-service/authentication.service';\r\nimport { UserService } from './services/user-service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'frontend';\r\n\r\n  toolbarName = null;\r\n\r\n  loggedUser: any = null;\r\n\r\n  // user: any;\r\n\r\n  // userId$: Observable<string> = this.authService.observeGetUserId();\r\n\r\n  // user$: Observable<User> = this.userId$.pipe(\r\n  //   switchMap((userId: string) => this.userService.findOne(userId))\r\n  // )\r\n  \r\n  constructor(private router: Router, \r\n    private authService: AuthenticationService,\r\n    private userService: UserService,\r\n    private confService: ConfigService\r\n    ) {}\r\n\r\n    \r\n\r\n  ngOnInit(): void {\r\n      this.loggedUser = this.confService.getConfig();\r\n       \r\n      this.authService.currentUser.subscribe(\r\n        x => {\r\n          this.toolbarName = x;\r\n        }\r\n      )\r\n\r\n      console.log(this.toolbarName);\r\n      \r\n      \r\n      \r\n      \r\n    //   .subscribe(x => {\r\n    //   this.loggedUser = x;\r\n    //   this.toolbarName = x.nickname;\r\n    // })\r\n     \r\n    // this.userService.setNickname()\r\n    // this.userService._nickname.subscribe(x => {\r\n    //   this.loggedUser = x;\r\n    //   this.toolbarName = x.nickname;\r\n    // })\r\n    // const userId = this.authService.getUserId();\r\n    // this.userService.findOne(userId).subscribe(user => {\r\n    //   this.user = user;\r\n    //   // this.ngOnInit()\r\n    // })\r\n    \r\n\r\n  }\r\n\r\n  navigateTo(value) {\r\n    this.router.navigate(['../', value]);\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    document.location.reload();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentification-service/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthenticationService, private router: Router) {}\n  canActivate(): boolean {\n    const userRole = this.authService.getUserRole();\n    if(userRole === 'admin') {\n      return true;\n    } else {\n      this.router.navigate(['']);\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentification-service/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthenticationService, private router: Router) {}\n  canActivate(): boolean {\n    // console.log('Гуарды: функция canActivate() в authguard начала свою работу');    \n    // console.log('Гуарды: выполняется функция canActivate в authguard. Смотрит, зарегистрированны мы или нет. Если нет - переводит на страницу логина. Выполняет функцию isAuthenticated');\n    \n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['login']);\n      // console.log('Гуарды: выполняется функция canActivate в authguard. authguard вернул false и перевел на страницу логина');\n      \n      return false;\n    }\n    // console.log('Гуарды: выполняется функция canActivate в authguard. authguard вернул true - мы авторизованы');\n    // console.log('Гуарды: функция canActivate() в authguard завершила свою работу');    \n    \n    return true;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\nimport { map, tap, switchMap } from \"rxjs/operators\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { Observable, of, Subject } from 'rxjs';\r\nimport { User } from 'src/app/model/user.interface';\r\n\r\nexport interface LoginForm {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\n\r\n\r\nexport const JWT_NAME = 'user-token';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(private http: HttpClient, private jwtHelper: JwtHelperService) { }\r\n\r\n  currentUser = new Subject<User>();\r\n\r\n  login(loginForm: LoginForm) {\r\n    \r\n    return this.http.post<any>('/api/user/login', {email: loginForm.email, password: loginForm.password}).pipe(\r\n      map((token) => {\r\n        localStorage.setItem(JWT_NAME, token.access_token);\r\n        return token;\r\n      }),\r\n      map((a) => {\r\n        this.getCurrentUser();\r\n      })\r\n    )\r\n  }\r\n\r\n  getCurrentUserObserv(): Observable<any> {\r\n    return of(localStorage.getItem(JWT_NAME)).pipe(\r\n      switchMap((jwt: string) => of(this.jwtHelper.decodeToken(jwt)).pipe(\r\n        map((jwt: any) => jwt.user)\r\n        // map((a)=> this.currentUser = a)\r\n        )\r\n      )\r\n    )\r\n  }\r\n\r\n  getCurrentUser() {\r\n    const token = localStorage.getItem(JWT_NAME);\r\n    const decoded = this.jwtHelper.decodeToken(token);\r\n    this.currentUser.next(decoded.user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(JWT_NAME);\r\n  }\r\n\r\n  register(user) {\r\n    return this.http.post<any>('/api/user/', user).pipe(\r\n      map(user => user)\r\n    )\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    const token = localStorage.getItem(JWT_NAME);\r\n    const a = !this.jwtHelper.isTokenExpired(token)\r\n    return a;\r\n  }\r\n\r\n  getUserId(): string {\r\n    const token = localStorage.getItem(JWT_NAME);\r\n    if (token) {\r\n      const decoded = this.jwtHelper.decodeToken(token);\r\n      return decoded.user._id;\r\n      \r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  observeGetUserId(): Observable<string>{\r\n    return of(localStorage.getItem(JWT_NAME)).pipe(\r\n      switchMap((jwt: string) => of(this.jwtHelper.decodeToken(jwt)).pipe(\r\n        map((jwt: any) => jwt.user._id))\r\n      )\r\n    )\r\n  }\r\n\r\n  getUserRole(): string {\r\n    const token = localStorage.getItem(JWT_NAME);\r\n    if (token) {\r\n      const decoded = this.jwtHelper.decodeToken(token);\r\n      return decoded.user.role;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  observeGetUserRole(): Observable<string>{\r\n    return of(localStorage.getItem(JWT_NAME)).pipe(\r\n      switchMap((jwt: string) => of(this.jwtHelper.decodeToken(jwt)).pipe(\r\n        map((jwt: any) => jwt.user.role))\r\n      )\r\n    )\r\n  }\r\n  \r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { ConfigService } from 'src/app/config.service';\r\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\r\nimport { UserService } from 'src/app/services/user-service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  hide = true;\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private confService: ConfigService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        Validators.minLength(3)\r\n      ])\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.authService.login(this.loginForm.value).pipe(\r\n      map(a => this.confService.getConfig()),\r\n      map(b => this.router.navigate(['profile']))\r\n      )\r\n      .subscribe();\r\n    // this.userService.setNickname();\r\n  }\r\n\r\n  navigateTo(value) {\r\n    this.router.navigate(['../', value]);\r\n  }\r\n\r\n  // login() {\r\n  //   this.authService.login('admin1@email.com', 'admin1').subscribe(data => console.log('SUCCESS'));\r\n  // }\r\n\r\n}\r\n","<div class=\"row main-container\">\r\n    <div class=\"col-4 login-image\">\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"new-user\">\r\n            Не зарегистрированны?\r\n            <button (click)=\"navigateTo('register')\" class=\"new-user-button\" >Присоединиться</button>\r\n        </div>\r\n\r\n        <div class=\"second-login\">\r\n            <h1>\r\n                Вход на Cook book\r\n            </h1>\r\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"container\">\r\n                    <mat-form-field>\r\n                        <input matInput formControlName=\"email\" placeholder=\"Электронная почта\" >\r\n                        <mat-hint *ngIf=\"loginForm.controls.email.errors\">Пожалуйста, введите электронную почту</mat-hint>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                        <mat-label>Пароль</mat-label>\r\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" type=\"password\">\r\n                        <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                        </button>\r\n                        <mat-hint *ngIf=\"loginForm.controls.password.errors\">Пожалуйста, введите пароль</mat-hint>\r\n                      </mat-form-field>\r\n                      <a href=\"#\" class=\"reset-pass\"><small>Забыли пароль?</small></a>\r\n                      \r\n            \r\n                    <!-- <mat-form-field>\r\n                        <input matInput formControlName=\"password\" placeholder=\"Password\" type=\"password\">\r\n                        <mat-hint *ngIf=\"loginForm.controls.password.errors\">Password is required</mat-hint>\r\n                    </mat-form-field> -->\r\n            \r\n                    <button mat-raised-button class=\"login-button\" color=\"primary\" [disabled]=\"!loginForm.valid\" type=\"submit\">Войти</button>            \r\n                </div>\r\n            </form> \r\n        </div>\r\n             \r\n    </div>\r\n  </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\r\n\r\nclass CustomValidators {\r\n  static passwordContainsNumber(control: AbstractControl): ValidationErrors {\r\n    const regex= /\\d/;\r\n\r\n    if (regex.test(control.value) && control.value!== null) {\r\n      return null;\r\n    } else {\r\n      return {passwordInvalid: true};\r\n    }\r\n  }\r\n\r\n  static passwordsMatch (control: AbstractControl): ValidationErrors {\r\n    const password = control.get('password').value;\r\n    const passwordConfirm = control.get('passwordConfirm').value;\r\n\r\n    if ((password === passwordConfirm) && (password !== null && passwordConfirm !== null)) {\r\n      return null;\r\n    } else {\r\n      return {passwordsNotMatching: true};\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  hide = true;\r\n  registerForm: FormGroup;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      name: [null, [Validators.required]],\r\n      nickname: [null, [Validators.required]],\r\n      email: [null, [\r\n        Validators.required,\r\n        Validators.email\r\n      ]],\r\n      password: [null, [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n        CustomValidators.passwordContainsNumber\r\n      ]],\r\n      passwordConfirm: [null, [Validators.required]]\r\n    }, {\r\n      validators: CustomValidators.passwordsMatch\r\n    })\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.registerForm.invalid){\r\n      return;\r\n    }\r\n    console.log(this.registerForm.value);\r\n    this.authService.register(this.registerForm.value).pipe(\r\n      map(user => this.router.navigate(['login']))\r\n    ).subscribe();\r\n    \r\n  }\r\n\r\n  navigateTo(value) {\r\n    this.router.navigate(['../', value]);\r\n  }\r\n\r\n}\r\n","<div class=\"row main-container\">\r\n    <div class=\"col-4 register-image\">\r\n    </div>\r\n    <div class=\"col-8\">\r\n        <div class=\"registered-user\">\r\n            Зарегистрированны?\r\n            <button (click)=\"navigateTo('login')\" class=\"registered-user-button\" >Войти</button>\r\n        </div>\r\n\r\n        <div class=\"second-register\">\r\n            <h1>\r\n                Регистрация на Cook book\r\n            </h1>\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"container\">\r\n                    <mat-form-field>\r\n                        <input matInput formControlName=\"name\" placeholder=\"Имя\">\r\n                        <mat-hint *ngIf=\"registerForm.get('name').errors\">Пожалуйста, введите имя</mat-hint>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                        <input matInput formControlName=\"nickname\" placeholder=\"Логин\" >\r\n                        <mat-hint *ngIf=\"registerForm.get('nickname').errors\">Пожалуйста, введите логин</mat-hint>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                        <input matInput formControlName=\"email\" placeholder=\"Email\" >\r\n                        <mat-hint *ngIf=\"registerForm.get('email').errors\">Пожалуйста, введите электронную почту</mat-hint>\r\n                    </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                        <mat-label>Пароль</mat-label>\r\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" type=\"password\" >\r\n                        <button mat-icon-button matSuffix type=\"button\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                        <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                        </button>\r\n                        <mat-hint *ngIf=\"registerForm.get('password').errors\">Пароль должен содержать как минимум одну цифру</mat-hint>\r\n                      </mat-form-field>\r\n            \r\n                    <mat-form-field>\r\n                        <input matInput formControlName=\"passwordConfirm\" placeholder=\"Повторите пароль\" type=\"password\">\r\n                        <mat-hint *ngIf=\"registerForm.hasError('passwordsNotMatching')\">Пароли не совпадают</mat-hint>\r\n                    </mat-form-field>\r\n            \r\n                   \r\n            \r\n                    <button mat-raised-button class=\"register-button\" color=\"primary\" [disabled]=\"registerForm.invalid\" type=\"submit\">Зарегистрироваться</button>\r\n                   \r\n                </div>\r\n                <!-- <h3 *ngIf=\"registerForm.invalid\">Form contains following errors</h3>\r\n                <small *ngIf=\"registerForm.get('password').hasError('passwordInvalid')\">Password is not containing a number</small> <br>\r\n                <small *ngIf=\"registerForm.hasError('passwordsNotMatching')\">Passwords not matching</small> -->\r\n\r\n            </form> \r\n        </div>    \r\n    </div>\r\n  </div>\r\n\r\n  \r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { SnackbarComponent } from 'src/app/components/ui/snackbar/snackbar.component';\nimport { BlogDto } from 'src/app/model/blog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FunctionService {\n\n  constructor(private http: HttpClient,\n    private _snackBar: MatSnackBar\n    \n    ) { }\n\n  durationInSeconds = 3;\n\n\n  likeOneBlog(blog): Observable<BlogDto> {\n    return this.http.put('api/functions/' + blog._id, blog);\n  }\n\n  dislikeOneBlog(blog): Observable<BlogDto> {\n    blog.likes = blog.likes - 1;\n    return this.http.put('api/functions/' + blog._id, blog);\n  }\n\n  openSnackBar(message: string) {\n    const dialogRef = this._snackBar.open(message, null, {duration: 3000});\n\n    dialogRef.afterDismissed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  getAllCategory(): Observable<any> {\n    return this.http.get('/api/category')\n  }\n\n  getAllIngredients(): Observable<any> {\n    return this.http.get('/api/ingredient')\n  }\n\n  getIngredientById(id): Observable<any> {\n    return this.http.get('/api/ingredient/' + id)\n  }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\r\n// import { CommonModule  } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { JwtHelperService, JWT_OPTIONS } from '@auth0/angular-jwt';\r\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { MarkdownModule } from 'ngx-markdown';\r\nimport { UsersComponent } from './components/user/users/users.component';\r\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\r\nimport { UpdateUserProfileComponent } from './components/user/update-user-profile/update-user-profile.component';\r\nimport { AllBlogEntriesComponent } from './components/blog/all-blog-entries/all-blog-entries.component';\r\nimport { CreateBlogEntryComponent } from './components/blog/create-blog-entry/create-blog-entry.component';\r\nimport { ViewBlogEntryComponent } from './components/blog/view-blog-entry/view-blog-entry.component';\r\nimport { PersonalProfileComponent } from './components/user/personal-profile/personal-profile.component';\r\nimport { ConfigService } from './config.service';\r\nimport { UpdateBlogComponent } from './components/blog/update-blog/update-blog.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { SnackbarComponent } from './components/ui/snackbar/snackbar.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { DeleleBlogComponent } from './components/ui/delele-blog/delele-blog.component';\r\nimport { StepDirective } from './step.directive';\r\nimport { RecipeStepComponent } from './components/ui/recipe-step/recipe-step.component';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { WelcomeMessageComponent } from './components/ui/welcome-message/welcome-message.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { IngredientsComponent } from './components/ui/ingredients/ingredients.component';\r\nimport { UserBlogsComponent } from './components/user/user-blogs/user-blogs.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DeleteBlogAdminComponent } from './components/ui/delete-blog-admin/delete-blog-admin.component';\r\nimport { FullViewImageComponent } from './components/ui/full-view-image/full-view-image.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { UserFavoritesComponent } from './components/user/user-favorites/user-favorites.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { UserDraftsComponent } from './components/user/user-drafts/user-drafts.component';\nimport { DraftBlogAdminComponent } from './components/ui/draft-blog-admin/draft-blog-admin.component';\r\n\r\nexport function initConfig(config: ConfigService) {\r\n  return () => config.loadConfig();\r\n}\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    UsersComponent,\r\n    UserProfileComponent,\r\n    UpdateUserProfileComponent,\r\n    HomeComponent,\r\n    AllBlogEntriesComponent,\r\n    CreateBlogEntryComponent,\r\n    ViewBlogEntryComponent,\r\n    PersonalProfileComponent,\r\n    UpdateBlogComponent,\r\n    SnackbarComponent,\r\n    DeleleBlogComponent,\r\n    StepDirective,\r\n    RecipeStepComponent,\r\n    WelcomeMessageComponent,\r\n    IngredientsComponent,\r\n    UserBlogsComponent,\r\n    DeleteBlogAdminComponent,\r\n    FullViewImageComponent,\r\n    UserFavoritesComponent,\r\n    UserDraftsComponent,\r\n    DraftBlogAdminComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    // BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatProgressBarModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatDialogModule,\r\n    MatTabsModule,\r\n    MatTooltipModule,\r\n    MatStepperModule,\r\n    MarkdownModule.forRoot()\r\n  ],\r\n  providers: [\r\n    ConfigService,\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initConfig,\r\n      multi: true,\r\n      deps: [ConfigService]\r\n    },\r\n    JwtHelperService,\r\n    { provide: JWT_OPTIONS, useValue: JWT_OPTIONS },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: JwtInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap, startWith } from 'rxjs/operators';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatAutocompleteSelectedEvent, MatAutocomplete} from '@angular/material/autocomplete';\nimport {MatChipInputEvent} from '@angular/material/chips';\nimport { TagService } from 'src/app/services/tag-service/tag.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SnackbarComponent } from '../../ui/snackbar/snackbar.component';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { MatSelectChange } from '@angular/material/select';\n\n\n\nexport interface File {\n  data: any;\n  progress: number;\n  inProgress: boolean;\n}\n\n@Component({\n  selector: 'app-create-blog-entry',\n  templateUrl: './create-blog-entry.component.html',\n  styleUrls: ['./create-blog-entry.component.scss']\n})\nexport class CreateBlogEntryComponent implements OnInit {\n\n  ingredientSource$: Observable<any> = this.functionService.getAllIngredients();\n  tagsSource$: Observable<any> = this.tagService.getAllTags();\n  categorySource$: Observable<any> = this.functionService.getAllCategory();\n  measureSource$: Observable<any>;\n\n\n  ingredient: any;\n  formGroup : FormGroup;\n  formArray: FormArray;\n\n  snackBarMessage: string = 'Рецепт успешно отправлен на модерацию!'\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER];\n  tagCtrl = new FormControl();\n  tags: string[] = [];\n  ingredients: string[] = [];\n  \n  measures: any[] = [\n    {value: 'гр.'},\n    {value: 'стакан'},\n    {value: 'чайн. л.'},\n    {value: 'ст. л.'},\n    {value: 'дес. л.'},\n    {value: 'шт.'},\n    {value: 'кусок'},\n    {value: 'щепотка'},\n    {value: 'на вкус'},\n    {value: 'л.'},\n    {value: 'мл.'},\n\n  ];\n\n  @ViewChild('tagInput') tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n\n  file: File = {\n    data: null,\n    inProgress: false,\n    progress: 0\n  };\n\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private blogService: BlogService,\n    private tagService: TagService,\n    private functionService: FunctionService,\n    private router: Router,\n  ) {\n\n    // this.form = this.formBuilder.group({\n    //   published: true,\n    //   credentials: this.formBuilder.array([]),\n    // });\n  }\n\n  get tagsArr(): FormArray {\n    return <FormArray>this.form.get('tags');\n  }\n\n  getIngredient(event) {\n    console.log(event);\n    \n    // this.measures = {\n    //   value: event.value,\n    //   text: event.source.triggerValue\n    // };\n    // console.log(this.measures);\n    \n    \n    // const ingId = this.ingredient;\n    // console.log(ingId);\n    // this.measureSource$ = this.functionService.getIngredientById(ingId).pipe(\n    //   tap((x) => this.measures.push(x.measurementRu)\n    //   )\n    // )\n    // console.log( this.measures)\n  }\n \n\n  add(event: MatChipInputEvent): void {\n    console.log('add function');\n    \n    const input = event.input;\n    const value = event.value;   \n    if ((value || '').trim()) {\n      this.tags.push(value.trim());\n    }\n    if (input) {\n      input.value = '';\n    }\n    this.tagsArr.setValue(null);    \n  }\n\n  remove(tag: string): void {\n    console.log('remove func');\n    \n    const index = this.tags.indexOf(tag);   \n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    console.log('selected function');\n    \n    // const a =  event.option.viewValue\n    // this.tagsArr.push(a)\n    this.tags.push(event.option.viewValue);\n    this.tagInput.nativeElement.value = '';\n    this.tagsArr.setValue(null);\n  }\n\n  // private _filter(value: string): string[] {\n  //   const filterValue = value.toLowerCase();\n  //   return this.allFruits.filter(fruit => fruit.toLowerCase().indexOf(filterValue) === 0);\n  // }\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      id: [{value: null, disabled: true}],\n      title: [null, [Validators.required]],\n      slug: [{value: null, disabled: true}],\n      description: [null, [Validators.required]],\n      // body: [null, [Validators.required]],\n      headerImage: [null, [Validators.required]],\n      tags: [null],\n      steps: this.formBuilder.array([this.init()]),\n      timeForCooking: [null, [Validators.required]],\n      category: [null],\n      ingredients: this.formBuilder.array([this.initIng()]),\n      servings: [null]\n    })\n\n    // this.formGroup = this._formBuilder.group({\n    //   formArray : this._formBuilder.array([this.init()])\n    // }) \n    this.addItem();\n    this.addItemIng();\n\n    console.log(this.tagsSource$);\n    \n  }\n\n  init(){\n    return this.formBuilder.group({\n      stepPhoto: new FormControl(\"\", []),\n      step: new FormControl(\"\", [Validators.required]),\n    })\n  }\n\n  initIng(){\n    return this.formBuilder.group({\n      ingredient: new FormControl(\"\", [Validators.required]),\n      quantity: new FormControl(\"\", [Validators.required]),\n      measure: new FormControl(\"\", [Validators.required]),\n    })\n  }\n\n  addItem(){\n    this.formArray = this.form.get(\"steps\") as FormArray;\n    this.formArray.push(this.init());\n  }\n\n  addItemIng(){\n    this.formArray = this.form.get(\"ingredients\") as FormArray;\n    this.formArray.push(this.initIng());\n    // this.formArray = this.form.get(\"quantity\") as FormArray;\n    // this.formArray.push(this.initIng());\n  }\n\n  deleteItemIng(i){\n    let a = this.form.get(\"ingredients\") as FormArray;\n    a.removeAt(i);\n  }\n\n  deleteItemStep(i){\n    let a = this.form.get(\"steps\") as FormArray;\n    a.removeAt(i);\n  }\n\n\n  post(){\n    \n    this.form.controls['tags'].setValue(this.tags);\n    console.log(this.form.getRawValue());\n    this.blogService.postToModerate(this.form.getRawValue()).pipe(\n      tap(() => this.functionService.openSnackBar(this.snackBarMessage)),\n      tap(() => this.router.navigate(['../']))\n    ).subscribe();\n  }\n\n  // openSnackBar() {\n  //   this._snackBar.openFromComponent(SnackbarComponent, {\n  //     duration: this.durationInSeconds * 1000,\n  //   });\n  // }\n\n  stepImageUpload() {\n    console.log('stepimageupload');\n    \n    const fileInput = this.fileUpload.nativeElement;\n    fileInput.click();\n    fileInput.onchange = () => {\n      this.file = {\n        data: fileInput.files[0],\n        inProgress: false,\n        progress: 0\n      };\n      this.fileUpload.nativeElement.value = '';\n      this.uploadStepFile();\n    };\n\n  }\n\n  onClick() {\n    const fileInput = this.fileUpload.nativeElement;\n    fileInput.click();\n    fileInput.onchange = () => {\n      this.file = {\n        data: fileInput.files[0],\n        inProgress: false,\n        progress: 0\n      };\n      this.fileUpload.nativeElement.value = '';\n      this.uploadFile();\n    };\n\n  }\n\n  deleteImage() {\n    this.form.controls['headerImage'].setValue(null);\n  }\n\n  uploadFile() {\n    console.log('Компонент - update-user-profile: uploadFile() начал свою работу');\n    const formData = new FormData();\n    formData.append('file', this.file.data);\n    this.file.inProgress = true;\n\n    this.blogService.uploadHeaderImage(formData).pipe(\n      map((event) => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            this.file.progress = Math.round(event.loaded * 100 / event.total);\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.file.inProgress = false;\n        return of('Upload failed');\n      })\n    ).subscribe((event: any) => {\n      if(typeof (event) === 'object') {\n        this.form.patchValue({headerImage: event.body.filename});\n      }\n    })\n  }\n\n  uploadStepFile() {\n    console.log('Компонент -uploadStepFile() начал свою работу');\n    const formData = new FormData();\n    formData.append('file', this.file.data);\n    this.file.inProgress = true;\n\n    this.blogService.uploadStepImage(formData).pipe(\n      map((event) => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            this.file.progress = Math.round(event.loaded * 100 / event.total);\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.file.inProgress = false;\n        return of('Upload failed');\n      })\n    ).subscribe((event: any) => {\n      if(typeof (event) === 'object') {\n        this.form.patchValue({stepPhoto: event.body.filename});\n      }\n    })\n  }\n\n}\n","<div class=\"main-div\" style=\"margin: 0;\">\n    <div class=\"row\" style=\"margin: 0;\">\n        <div class=\"col\" ></div>\n        <div class=\"col-6\" >                 \n            <form [formGroup]=\"form\">\n                <div>\n                    <mat-card class=\"container\">\n                        <div style=\"margin-top: 3%;\"> <p class=\"post-create\">ВЫ СОЗДАЕТЕ НОВЫЙ РЕЦЕПТ:</p> </div>\n                        <hr  width=\"100%\"/>\n                        <div class=\"row title-category-div\">\n                            <p class=\"headers-text\" style=\"padding: 0;\">Название блюда и категория блюда</p>\n\n                            <div class=\"col\" style=\"padding-left: 0;\">\n                                <div class=\"post-title-div\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <mat-label>Название блюда</mat-label>\n                                        <input matInput formControlName=\"title\">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"col\" style=\"padding-right: 0;\">\n                                <div class=\"category-div\">\n                                    <mat-form-field appearance=\"fill\">\n                                        <mat-label>Выберите категорию блюда</mat-label>\n                                        <mat-select formControlName=\"category\" >\n                                        <mat-option  *ngFor=\"let category of (categorySource$ | async)\" [value]=\"category._id\">{{category.catTitle}}</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                  \n\n                      \n\n                        <div class=\"post-image\">\n                            <mat-label class=\"headers-text\">Фото готового блюда</mat-label>\n                            <mat-card style=\"margin-top: 3%\">\n                                <mat-card-content>\n                                    <img class=\"post-image-img\" *ngIf=\"form.get('headerImage').value\" src=\"http://localhost:3000/api/blogs/image/{{form.get('headerImage').value}}\">\n                                    <div class=\"img-wrap\" *ngIf=\"form.get('headerImage').value\">\n                                        <button id=\"clear\" class=\"hide\" (click)=\"deleteImage()\">х</button>\n                                    </div> \n                                    <mat-card-actions *ngIf=\"!form.get('headerImage').value\">\n                                        <div class=\"row\">\n                                            <div class=\"col\"></div>\n                                            <div class=\"col\">\n                                                <button class=\"add-image\" mat-button type=\"button\" (click)=\"onClick()\">\n                                                    <mat-icon>cloud_upload</mat-icon>\n                                                    <p >Добавить фотографию</p>\n                                                </button>\n                                            </div>\n                                            <div class=\"col\"></div>\n                                        </div>\n                                     \n                                        <mat-progress-bar [value]=\"file.progress\">\n                                        </mat-progress-bar>\n                                    </mat-card-actions>\n                                    \n                                </mat-card-content>\n                            </mat-card>\n                            <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" accept=\"image/*\" style=\"display: none;\">\n                        </div>\n                        <hr  width=\"80%\"/>\n\n                        <div class=\"post-description\">\n                            <div class=\"col\">\n                                <mat-form-field appearance=\"outline\">\n                                    <mat-label class=\"headers-text\">Описание блюда</mat-label>\n                                    <textarea class=\"post-textarea\" matInput  formControlName=\"description\">\n                                    </textarea>\n                                    <mat-hint>\n                                        Обязательно напишите 2-3 строки - что это за блюдо, его особенности, вкусовые качества.\n                                        Этот текст будет показываться в качестве анонса к Вашему рецепту - и именно по этому тексту люди будут определять, стоит читать Ваш рецепт - или нет.\n                                    </mat-hint>\n                                </mat-form-field>\n                            </div>     \n                        </div>\n\n                        <hr  width=\"80%\"/>\n\n                        <div class=\"row\" style=\"width: 100%; margin-top: 2%;\">\n                       \n\n                            <div class=\"col\" >\n                                <div class=\"col-4\"></div>\n                                <p class=\"headers-text\">Количество порций</p>\n                                    <div class=\"col-2\" > \n                                        <mat-form-field appearance=\"outline\">\n                                            <input matInput type=\"number\" class=\"servings\" formControlName=\"servings\">\n                                        </mat-form-field>\n                                    </div>\n                                <div class=\"col-4\"></div>\n\n                            </div>\n                            <div class=\"col row\">\n                                <p class=\"headers-text\">Время приготовления</p>\n\n                                <!-- <div class=\"col-4\" style=\"background-color: blue;\">1</div> -->\n                                <div class=\"col-3\">\n                                    <mat-form-field appearance=\"outline\">\n                                        <input matInput type=\"number\"  class=\"servings\" formControlName=\"timeForCooking\"> \n                                    </mat-form-field> \n                                </div>\n                                    <div class=\"col container\">\n                                        <div class=\"col\"></div>\n                                        <div class=\"col\"></div>\n                                        <div class=\"col\" style=\" width: 100%;\">\n                                            <p class=\"text-left\">мин.</p>\n                                        </div>\n                                        <div class=\"col-3\"></div>\n\n                                    </div>\n                            </div>\n                        </div>  \n                        <hr  width=\"80%\"/>\n                        \n\n                        <div  style=\"width: 100%;\">\n                            <p class=\"headers-text\" style=\"margin-bottom: 2%; margin-top: 1%;\">Ингредиенты</p>\n                                    <div formArrayName=\"ingredients\" style=\"width: 100%;\">\n                                        <div  class=\"row row-cols-2\" [formGroupName]=\"i\" *ngFor=\"let customerGroup of form.get('ingredients')['controls']; let i = index\">\n                                            <div class=\"col\">\n                                                <mat-label>Ингредиент {{i + 1}}</mat-label>\n                                            </div>\n                                            <div class=\"col\">\n                                                <mat-label>Количество</mat-label>\n                                            </div>\n                                            <div class=\"col\">\n                                                <mat-form-field appearance=\"fill\">\n                                                    <mat-label>Выберите ингредиент</mat-label>\n                                                    <mat-select formControlName=\"ingredient\">\n                                                    <mat-option>-</mat-option>\n                                                    <mat-option  *ngFor=\"let ingredient of (ingredientSource$ | async)\" [value]=\"ingredient._id\">{{ingredient.ingTitleRu}}</mat-option>\n                                                    </mat-select>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col quantity-measure\">\n                                                <mat-form-field appearance=\"outline\" class=\"servings-div\">\n                                                    <input matInput type=\"number\" formControlName=\"quantity\" class=\"servings\">\n                                                </mat-form-field>\n                                                <mat-form-field appearance=\"fill\" class=\"measure-div\">\n                                                    <mat-label>Ед. изм</mat-label>\n                                                    <mat-select formControlName=\"measure\">\n                                                    <mat-option>-</mat-option>\n                                                    <mat-option *ngFor=\"let measure of measures\" [value]=\"measure.value\">\n                                                        {{measure.value}}\n                                                      </mat-option>\n                                                    <!-- <mat-option  *ngFor=\"let measure of (measureSource$ | async)\" [value]=\"measure.measurementRu\">{{measure.measurementRu}}</mat-option> -->\n                                                    </mat-select>\n                                                </mat-form-field>\n                                                <button type=\"button\" *ngIf=\"i >= 1\" class=\"deleteItemIng\" mat-flat-button (click)=\"deleteItemIng(i)\">&#10006;</button>\n                                            </div>\n                                        <div> \n                                    </div>\n                                </div>\n                            </div>\n                            <button type=\"button\"  class=\"add-button\" mat-raised-button (click)=\"addItemIng()\">Добавить ингредиент</button>\n                        </div>\n                        <hr  width=\"80%\"/>\n                       \n              \n                    \n\n                        <div  style=\"width: 100%;\">\n                            <p class=\"headers-text\" style=\"margin-bottom: 2%;\">Пошаговая инструкция</p>\n                            \n                                    <div formArrayName=\"steps\" style=\"width: 100%;\">\n                                        <div class=\"row\" style=\"margin-top: 3%;\" [formGroupName]=\"y\" *ngFor=\"let customerGroup of form.get('steps')['controls']; let y = index\">\n                                                <mat-label>Шаг {{y + 1}}</mat-label>\n                                                <div class=\"col-3\" >\n                                                    <div class=\"step-image\" >\n                                                        <mat-card style=\"margin-top: 3%\">\n                                                            <mat-card-content>\n                                                                <img class=\"post-image-img\" *ngIf=\"form.get('headerImage').value\" src=\"http://localhost:3000/api/blogs/image/{{form.get('headerImage').value}}\">\n                                                                <div class=\"img-wrap\" *ngIf=\"form.get('headerImage').value\">\n                                                                    <button id=\"clear\"  class=\"hide\" (click)=\"deleteImage()\">х</button>\n                                                                </div> \n                                                                <mat-card-actions *ngIf=\"!form.get('headerImage').value\" class=\"mat-card-step\">\n                                                                            <button class=\"add-step-image-button\" mat-button type=\"button\" (click)=\"stepImageUpload()\">\n                                                                                <mat-icon>cloud_upload</mat-icon>\n                                                                                <p>Добавить <br/> \n                                                                                    фотографию  </p>\n                                                                            </button>\n                                                                </mat-card-actions>\n                                                                \n                                                            </mat-card-content>\n                                                        </mat-card>\n                                                        <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" accept=\"image/*\" style=\"display: none;\">\n                                                    </div>\n                                                    <!-- <mat-form-field appearance=\"fill\">\n                                                        <mat-label>Тут будет фотография</mat-label>\n                                                        <input matInput type=\"number\" formControlName=\"stepPhoto\" class=\"servings\">\n    \n                                                        <mat-select formControlName=\"stepPhoto\">\n                                                        <mat-option>-</mat-option>\n                                                        </mat-select> \n                                                    </mat-form-field> -->\n                                                </div>\n                                                <div class=\"col row\">\n                                                    <div class=\"col\">\n                                                        <mat-form-field appearance=\"outline\" >\n                                                            <mat-label>Описание шага {{y + 1}} </mat-label>\n                                                            <textarea matInput type=\"text\" formControlName=\"step\" class=\"add-step-textarea\"> </textarea> \n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-2\">\n                                                        <button type=\"button\" *ngIf=\"y >= 1\" mat-flat-button (click)=\"deleteItemStep(y)\">&#10006;</button>\n                                                    </div>\n                                                    \n                                           \n                                                </div>\n                                         \n                                           \n                                </div>\n                            </div>\n                            <button type=\"button\" class=\"add-button\" style=\"margin-top: 3%;\" mat-raised-button (click)=\"addItem()\">Добавить шаг</button>\n                        </div>\n\n                            <hr  width=\"80%\"/>\n\n\n                            <mat-form-field class=\"example-chip-list\">\n                                <mat-label class=\"headers-text\">Тэги:</mat-label>\n                                <mat-chip-list #chipList aria-label=\"Fruit selection\">\n                                <mat-chip\n                                    *ngFor=\"let tag of tags\"\n                                    [selectable]=\"selectable\"\n                                    [removable]=\"removable\"\n                                    (removed)=\"remove(tag)\">\n                                    {{tag}}\n                                    <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                                </mat-chip>\n                                <input\n                                    matInput\n                                    formControlName=\"tags\"\n                                    placeholder=\"Добавьте тэги\"\n                                    #tagInput\n                                    [formControl]=\"tagsArr\"\n                                    [matAutocomplete]=\"auto\"\n                                    [matChipInputFor]=\"chipList\"\n                                    [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n                                    (matChipInputTokenEnd)=\"add($event)\">\n                                </mat-chip-list>\n                                <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n                                <mat-option *ngFor=\"let tag of (tagsSource$ | async)\" [value]=\"tag.tagName\">\n                                    {{tag.tagName}}\n                                </mat-option>\n                                </mat-autocomplete>\n                            </mat-form-field>\n                            \n                        \n\n\n                        <!-- <div>\n                            <app-recipe-step *ngFor=\"let title of list\" [title]=\"title\" status=\"true\"></app-recipe-step>\n                            <button StepDirective>Add a task</button>\n                        </div> -->\n\n                        <button mat-flat-button color=\"primary\" class=\"addToModerateButton\" [disabled]=\"form.invalid\" type=\"submit\" (click)=\"post()\">Отправить на модерацию</button>\n\n                    </mat-card>\n                </div>\n\n            </form>\n        </div>\n        <div class=\"col\">\n        </div>\n      </div>\n</div>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-full-view-image',\n  templateUrl: './full-view-image.component.html',\n  styleUrls: ['./full-view-image.component.scss']\n})\nexport class FullViewImageComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<FullViewImageComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    console.log(this.data);\n    \n  }\n\n}\n","<div class=\"container\">\n    <img src=\"http://localhost:3000/api/{{data.link}}{{data.postImage}}\" class=\"img-fluid\" >\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { BlogDto } from 'src/app/model/blog.interface';\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { FavoriteService } from 'src/app/services/favorite-service/favorite.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { FullViewImageComponent } from '../../ui/full-view-image/full-view-image.component';\n\n\n\n@Component({\n  selector: 'app-view-blog-entry',\n  templateUrl: './view-blog-entry.component.html',\n  styleUrls: ['./view-blog-entry.component.scss']\n})\nexport class ViewBlogEntryComponent implements OnInit {\n\n  snackBarInfoMessage: string = 'Пост успешно добавлен в избранное!';\n  isJoined: boolean = false;\n\n  blogDto$: Observable<BlogDto> = this.activatedRoute.params.pipe(\n    switchMap((params: Params) => {\n      const blogDtoId: string = (params['id']);\n      return this.blogService.findOneBlog(blogDtoId).pipe(\n        map((blogDto: BlogDto) => blogDto),\n        tap((blogDto) => console.log(blogDto)\n        )\n      )\n    })\n  )\n\n  constructor(\n    private authService: AuthenticationService,\n    private functionService: FunctionService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private blogService: BlogService,\n    public dialog: MatDialog,\n    private favoreteService: FavoriteService,\n\n  ) {}\n\n  ngOnInit(): void {\n    const getUserId = this.authService.getUserId();\n    if (getUserId !=null) {\n      this.isJoined = true;\n    }\n  }\n\n  showFullImage(postImage): void {\n    const link = 'blogs/image/'\n    const dialogRef = this.dialog.open(FullViewImageComponent, { data: { link, postImage } });\n  }\n\n  addPostToFavorites(post) {\n    this.favoreteService.createFavPost(post).subscribe();\n    this.functionService.openSnackBar(this.snackBarInfoMessage);\n\n  }\n\n  navigateToProfile(id) {\n    this.router.navigate(['users/' + id]);\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-2\"></div>\n        <div class=\"col\">\n            <div *ngIf=\"(blogDto$ | async) as post\" class=\"main-div\">\n                <mat-card class=\"card\">\n                    <button  mat-icon-button [matMenuTriggerFor]=\"menu\" type=\"button\" aria-label=\"Users menu\" class=\"users-menu\">\n                        <mat-icon>more_vert</mat-icon>\n                      </button>\n                      <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button mat-menu-item >\n                          <mat-icon>flag</mat-icon>\n                          <span>Пожаловаться</span>\n                        </button>\n                      </mat-menu>\n                    <mat-card-header>\n                        <div class=\"col\">\n                            <div class=\"post-category-div\">\n                                <p class=\"text-center\">\n                                    &#9900; {{post.category.catTitle}} &#9900;\n                                </p>\n                            </div>\n                            <div>\n                                <h1 class=\"text-center\" style=\"text-transform: uppercase; margin-top: 3%; margin-bottom: 0;\">\n                                    {{post.title}}\n                                </h1>\n\n                            </div>\n                        </div>\n                    </mat-card-header>\n                    <hr  width=\"100%\"/>\n                    <mat-card-content>\n                        <div class=\"row\" >\n                            <div class=\"col\" >\n                                <img src=\"http://localhost:3000/api/blogs/image/{{post.headerImage}}\" (click)=\"showFullImage(post.headerImage)\" class=\"header-image\">\n                                <div class=\"ingredients\" style=\"margin-top: 3%;\">\n                                    <h2>Ингредиенты</h2>\n                                    <div *ngFor=\"let ing of post.ingredients; let y = index\" class=\"row\">\n                                        <div class=\"col-3\">\n                                             {{y+1}}\n                                            {{ing.ingredient.ingTitleRu}}</div>\n                                        <div class=\"col\">\n                                            <hr />\n                                        </div>\n                                        <div class=\"col-2\">\n                                            {{ing.quantity}}\n                                            {{ing.measure}}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div style=\"margin-left: 20px;\" class=\"col\">\n                                <div class=\"avatar-image\" (click)=\"navigateToProfile(post.authorId._id)\" >\n                                    <img *ngIf=\"post.authorId.profileImage; else placeholderImage\" src=\"http://localhost:3000/api/user/profile-image/{{post.authorId.profileImage}}\" class=\"user-image\">\n                                    <h3> {{post.authorId.name}}</h3>\n                                </div>\n                                <ng-template #placeholderImage>\n                                    <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\" class=\"user-image\">\n                                </ng-template>\n                                <hr  width=\"100%\"/>\n                                <div class=\"row\" >\n                                    <!-- <div class=\"col-3\"></div> -->\n                                    <div class=\"col\" matTooltip=\"Количество ингридиентов\">\n                                        <img src=\"https://img.icons8.com/material-outlined/25/000000/shopping-cart-loaded.png\"/>\n                                    </div>\n                                    <div class=\"col\" matTooltip=\"Количество порций\">\n                                        <img src=\"https://img.icons8.com/material-outlined/24/000000/salad-bowl.png\"/>\n                                        {{post.servings}}   \n                                    </div>\n                                    <div class=\"col timer-icon-text\" matTooltip=\"Время приготовления\">\n                                        <mat-icon mat-list-icon>timer \n                                        </mat-icon>\n                                        {{post.timeForCooking}} минут  \n                                    </div>\n                                    <!-- <div class=\"col-2\"></div> -->\n                                </div>\n                                <div >\n                                    <mat-card>\n                                        Энергетическая ценность\n                                    </mat-card>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                    <hr />\n                    <div class=\"steps\">\n                        <h2>Пошаговая инструкция</h2>\n                        <div  *ngFor=\"let step of post.steps; let i = index\" >\n                            <b style=\"margin-right: 2%;\"> \n                                {{i+1}}.\n                            </b>\n                            <div class=\"step-div\">\n                                 {{step.step}}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"tags\" style=\"margin-top: 3%;\">\n                        <mat-chip-list aria-label=\"Fish selection\">\n                            <mat-chip\n                            *ngFor=\"let tag of post.tags\">{{tag}}</mat-chip>\n                        </mat-chip-list>\n                    </div>\n                    <div class=\"date\">\n                        {{post.createdAt | date}}\n                    </div>\n                    <mat-card-actions *ngIf=\"isJoined === true\">\n                        <hr/>\n                            <mat-icon color=\"accent\" matTooltip=\"Добавить рецепт в избранное\" style=\"cursor: pointer;\" (click)=\"addPostToFavorites(post)\" >bookmark</mat-icon> \n                      </mat-card-actions>\n                </mat-card>\n            </div>\n        </div>\n        <div class=\"col-2\"></div>\n    </div>\n</div>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BlogDto, BlogEntriesPageable } from 'src/app/model/blog.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n\n  constructor(private http: HttpClient) { }\n\n  indexAll(page: number, size: number): Observable<BlogEntriesPageable> {\n    let params = new HttpParams();\n\n    params = params.append('page', String(page));\n    params = params.append('limit', String(size));\n\n    return this.http.get<BlogEntriesPageable>('/api/blogs', {params});\n  }\n\n  indexByUser(userId: string): Observable<BlogDto> {\n    return this.http.get('/api/blogs/user/' + userId);\n  }\n\n  postToModerate(blogDto): Observable<any> {\n    return this.http.post<BlogDto>('/api/moderator', blogDto);\n  }\n\n  post(blogDto: BlogDto): Observable<BlogDto> {\n    console.log('post');\n    console.log(blogDto);\n    \n    \n    return this.http.post<BlogDto>('/api/blogs', blogDto);\n  }\n\n  uploadHeaderImage(formData: FormData): Observable<any> {\n    return this.http.post<FormData>('/api/blogs/image/upload', formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n  uploadStepImage(formData: FormData): Observable<any> {\n    return this.http.post<FormData>('/api/blogs/image/step-image-upload', formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n\n  findOneBlog(id: string): Observable<BlogDto> {\n    return this.http.get<BlogDto>('/api/blogs/' + id);\n  }\n\n  updateUserBlog(blog): Observable<BlogDto> {\n    console.log(blog);\n    console.log(blog._id);\n    \n    \n    return this.http.put('/api/blogs/' + blog._id, blog);\n  }\n\n  deleteBlogByUser(blogId): Observable<BlogDto> {\n    return this.http.delete('/api/blogs/' + blogId);\n  }\n\n  toggle(blog, userId): Observable<boolean> {\n    if (blog.likeUserId != 0) {\n      blog.likeUserId.forEach(function (v) {\n          if(v === userId) { return true; }\n        })\n    }\n  \n    // if (blog.likeUserid === userId) {\n    //   console.log('Айди есть');\n    // } else {\n    //   console.log('айди нет');\n      \n    // }\n    console.log(blog);\n    console.log(userId);\n    \n    return\n     \n    \n    // return this.toggled ? this.likeOneBlog(blog) : this.dislikeOneBlog(blog);\n  }\n  // toggle(blog): Observable<BlogDto> {\n  //   return blog\n    \n  //   // return this.toggled ? this.likeOneBlog(blog) : this.dislikeOneBlog(blog);\n  // }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\n\n@Component({\n  selector: 'app-delele-blog',\n  templateUrl: './delele-blog.component.html',\n  styleUrls: ['./delele-blog.component.scss']\n})\nexport class DeleleBlogComponent implements OnInit {\n\n  deleteBlogName: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleleBlogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private blogService: BlogService,\n    private functionService: FunctionService,\n    private router: Router,\n  ) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit(): void {\n    this.deleteBlogName = this.data.blog.title;\n  }\n\n\n  snackBarMessage: string = 'Рецепт был успешно удален!'\n\n  deleteBlog() {\n    const blogId = this.data.blog._id;\n    console.log(blogId);\n    \n    this.blogService.deleteBlogByUser(blogId).subscribe(); \n    // this.blogService.isBeDeleted = null\n    this.functionService.openSnackBar(this.snackBarMessage)\n    document.location.reload();\n  }\n}\n\n","<h1 mat-dialog-title>Вы собираетесь удалить рецепт {{deleteBlogName}}</h1>\n<div mat-dialog-content>Вы уверенны? Отменить действие не получится.</div>\n<div mat-dialog-actions >\n  <button mat-button mat-dialog-close cdkFocusInitial>Отменить</button>\n  <!-- <button mat-button mat-dialog>Продолжить</button> -->\n  <button mat-stroked-button color=\"warn\" [mat-dialog-close]=\"true\" (click)=\"deleteBlog()\">Удалить</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-snackbar',\n  templateUrl: './snackbar.component.html',\n  styleUrls: ['./snackbar.component.scss']\n})\nexport class SnackbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<span class=\"saved\">\n</span>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JWT_NAME } from '../services/authentification-service/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    console.log('Интерсептор: intercept() из intercept.ts начал работу.');\n    // console.log('Интерсептор: intercept() из intercept.ts. Получает токен и отправляет в header всю информацию из него. Если нет, возвращает запрос');\n    const token = localStorage.getItem(JWT_NAME);\n    // console.log('Интерсептор: intercept() из intercept.ts. Получил токен из localStorage ->', token);    \n    \n    if(token) {\n      const cloneReq = request.clone({\n        headers: request.headers.set('Authorization',\n        'Bearer ' + token)\n      });\n      // console.log('Интерсептор: intercept() из intercept.ts. Из полученного токен отправил инфу в headers и сделал запрос ->', cloneReq);\n      // console.log('Интерсептор: intercept() из intercept.ts. Возвращает ->', next.handle(cloneReq));\n      console.log('Интерсептор: intercept() из intercept.ts завершил работу');\n      return next.handle(cloneReq);\n    } else {\n      // console.log('Интерсептор: intercept() из intercept.ts. Не получил токен, сделал запрос ->', request);\n      // console.log('Интерсептор: intercept() из intercept.ts. Возвращает ->', next.handle(request));\n      console.log('Интерсептор: intercept() из intercept.ts завершил работу');\n      return next.handle(request);\n    }\n  }\n}\n","import { HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { of } from 'rxjs';\nimport { switchMap, tap, map, catchError } from 'rxjs/operators';\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { UserService } from 'src/app/services/user-service/user.service';\nimport { FullViewImageComponent } from '../../ui/full-view-image/full-view-image.component';\n\nexport interface File {\n  data: any;\n  progress: number;\n  inProgress: boolean;\n}\n\n@Component({\n  selector: 'app-update-user-profile',\n  templateUrl: './update-user-profile.component.html',\n  styleUrls: ['./update-user-profile.component.scss']\n})\nexport class UpdateUserProfileComponent implements OnInit {\n\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n\n  file: File = {\n    data: null,\n    inProgress: false,\n    progress: 0\n  };\n\n  snackBarImageMessage = 'Фотография успешно обновлена!'\n  snackBarInfoMessage = 'Информация успешно обновлена!'\n  form: FormGroup;\n\n  constructor(\n    public dialog: MatDialog,\n    private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private functionService: FunctionService,\n    private router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    const userId = this.authService.getUserId();\n    console.log(userId);\n    this.userService.findOne(userId).subscribe(user => {\n      console.log(user);      \n      this.form = new FormGroup({\n        id: new FormControl(userId),\n        name: new FormControl(user.name),\n        nickname: new FormControl(user.nickname),\n        profileImage: new FormControl(user.profileImage),\n        userDescription: new FormControl(user.userDescription),\n      });\n    });\n  }\n\n  updateImage() {\n    console.log('Компонент - update-user-profile: updateImage() начал свою работу');\n    console.log('Компонент - update-user-profile: updateImage() получил fileInput ->');   \n    const fileInput = this.fileUpload.nativeElement;\n    console.log(fileInput);\n    \n    fileInput.click();\n    fileInput.onchange = () => {\n      this.file = {\n        data: fileInput.files[0],\n        inProgress: false,\n        progress: 0\n      };\n      this.fileUpload.nativeElement.value = '';\n      this.uploadFile();\n    }\n  }\n\n  uploadFile() {\n    console.log('Компонент - update-user-profile: uploadFile() начал свою работу');\n    const formData = new FormData();\n    formData.append('file', this.file.data);\n    this.file.inProgress = true;\n    \n\n    this.userService.uploadProfileImage(formData).pipe(\n      map((event) => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            this.file.progress = Math.round(event.loaded * 100 / event.total);\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.file.inProgress = false;\n        return of('Upload failed');\n      }),\n      // tap(() => this.functionService.openSnackBar(this.snackBarImageMessage))\n    ).subscribe((event: any) => {\n      if(typeof (event) === 'object') {\n        this.form.patchValue({profileImage: event.body.profileImage});\n        this.functionService.openSnackBar(this.snackBarImageMessage);\n      }\n    })\n  }\n\n   \n  // this.form.controls['tags'].setValue(this.tags);\n  // console.log(this.form.getRawValue());\n  // this.blogService.postToModerate(this.form.getRawValue()).pipe(\n  //   tap(() => this.functionService.openSnackBar(this.snackBarMessage)),\n  //   tap(() => this.router.navigate(['../']))\n  // ).subscribe();\n   \n   update() {\n    this.userService.updateOne(this.form.getRawValue()).subscribe();\n    this.functionService.openSnackBar(this.snackBarInfoMessage);\n    this.router.navigate(['../profile']);\n    console.log('Компонент - update-user-profile: update() из update-user-profile.ts закончил работу.');   \n   }\n\n   showFullImage(postImage): void {\n    const link = 'user/profile-image/'\n    const dialogRef = this.dialog.open(FullViewImageComponent, {data: {link, postImage}});\n  }\n}\n","<form [formGroup]=\"form\" *ngIf=\"form\" (ngSubmit)=\"update()\">\r\n    <div class=\"container\">\r\n        <h1 class=\"text-center\" style=\"margin-top: 2%;\">Настройки профиля</h1>\r\n        <hr/>\r\n        <div class=\"row\">\r\n            <div class=\"col-4\">\r\n                <mat-card class=\"user-image-card\">\r\n                        <img *ngIf=\"form.get('profileImage').value\" src=\"http://localhost:3000/api/user/profile-image/{{form.get('profileImage').value}}\" (click)=\"showFullImage(form.get('profileImage').value)\" class=\"avatar-image\">\r\n                        <mat-progress-bar *ngIf=\"file.progress\" [value]=\"file.progress\" style=\"margin-top: 3%;\"></mat-progress-bar>\r\n                <mat-card-actions>\r\n\r\n                        <button mat-button type=\"button\" (click)=\"updateImage()\" class=\"update-button\">\r\n                            <mat-icon style=\"color: rgb(25, 199, 25);\">cloud_upload</mat-icon> Обновить фотографию\r\n                        </button>\r\n                    </mat-card-actions>\r\n                     \r\n                </mat-card>\r\n                <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" accept=\"image/*\" style=\"display:none;\">\r\n            </div>\r\n            <div class=\"col\">\r\n                <mat-card class=\"user-info\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\" style=\"margin-top: 1%;\">\r\n                            <div class=\"col\" >\r\n                                <mat-form-field>\r\n                                    <input matInput placeholder=\"Ваше имя\" formControlName=\"name\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col\" >\r\n                                <mat-form-field>\r\n                                    <input matInput placeholder=\"Никнейм\" formControlName=\"nickname\">\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <mat-form-field appearance=\"outline\">\r\n                            <mat-label class=\"headers-text\">Описание</mat-label>\r\n                            <textarea class=\"post-textarea\" matInput  placeholder=\"Описание\" formControlName=\"userDescription\">\r\n                            </textarea>\r\n                        </mat-form-field>\r\n                    </div>\r\n        \r\n                    <button mat-flat-button  class=\"update-info-button\" [disabled]=\"!form.valid\" type=\"submit\">Обновить информацию</button>\r\n                </mat-card>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</form>","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { AdminService } from 'src/app/admin/services/admin.service';\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\n\n@Component({\n  selector: 'app-user-drafts',\n  templateUrl: './user-drafts.component.html',\n  styleUrls: ['./user-drafts.component.scss']\n})\nexport class UserDraftsComponent implements OnInit {\n\n  \n  private userId$: Observable<string> = this.authService.observeGetUserId();\n\n  selected = 'Все рецепты';\n  test: string;\n  filters = [\n    {value: 'Все рецепты'},\n    {value: 'На проверке'},\n    {value: 'Отклоненные'}\n  ];\n\n  @Input() draftEntries;\n  constructor(\n    private adminService: AdminService,\n    private authService: AuthenticationService,\n    private router: Router,\n    private dialog: MatDialog\n  ) { }\n\n  filterDrafts(value) {\n    console.log(value);\n    \n    if (value === 'Все рецепты') {\n      this.getAllDrafts()\n    }\n    if (value === 'На проверке') {\n      this.getOnModerationDrafts()\n    }\n    if (value === 'Отклоненные') {\n      this.getRejectedDrafts()\n    }\n    \n  }\n\n  getAllDrafts() {\n    this.draftEntries = this.userId$.pipe(\n      switchMap((userId) => this.adminService.paginatePostForModerationByAuthorId(userId)),\n      tap((a) => console.log(a)\n        )\n    )\n  }\n\n  getOnModerationDrafts() {\n    this.test = 'На проверке'\n\n  }\n\n  getRejectedDrafts() {\n    this.test = 'Отклоненные'\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  navigate(id) {\n    this.router.navigateByUrl('blogs/' + id);\n  }\n\n}\n","<!-- <div *ngIf=\"blogEntriesLength > 0; else placeholderNullPosts\"> -->\n    <div style=\"margin-top: 3%;\">\n        <mat-card>\n            В этом разделе собраны рецепты, которые не прошли модерацию или еще на проверке. Другие пользователи могут видеть их.\n        </mat-card>\n        <!-- <mat-form-field style=\"margin-top: 3%;\" appearance=\"fill\">\n            <mat-label>Фильтрация рецептов</mat-label>\n            <mat-select [(value)]=\"selected\">\n              <mat-option (click)=\"filterDrafts(filter.value)\" *ngFor=\"let filter of filters\" [value]=\"filter.value\">\n                {{filter.value}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field> -->\n        <mat-card *ngFor=\"let blog of draftEntries.docs\" class=\"card\">\n            <div>\n                <button mat-icon-button [matMenuTriggerFor]=\"menu\" type=\"button\" aria-label=\"Users menu\" class=\"users-menu\">\n                    <mat-icon>more_vert</mat-icon>\n                </button>\n                <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                    <button mat-menu-item (click)=\"navigateToUpdate(blog._id)\">\n                        <mat-icon>edit</mat-icon>\n                        <span>Редактировать рецепт</span>\n                    </button>\n                    <button mat-menu-item (click)=\"openDeleteDialog(blog)\">\n                        <mat-icon color=\"warn\">delete</mat-icon>\n                        <span class=\"delete-button\">Удалить рецепт</span>\n                    </button>\n                </mat-menu>\n                <!-- {{test}} -->\n                <div style=\"display: flex;\" (click)=\"navigate(blog._id)\">\n                    <div>\n                        <img *ngIf=\"blog.headerImage; else placeholderImage\"\n                            src=\"http://localhost:3000/api/blogs/image/{{blog.headerImage}}\">\n                    </div>\n                    <ng-template #placeholderImage>\n                        <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\">\n                    </ng-template>\n                    <div style=\"margin-left: 30px;\">\n                        <h2>\n                            {{blog.title}}\n                        </h2>\n                        <h4 class=\"crop-text-2 \">{{blog.description}}</h4>\n                        <small>Категория:</small>\n                        <h4>{{blog.category.catTitle}}</h4>\n    \n                    </div>\n                </div>\n                <!-- <hr />\n                <mat-card-actions style=\"margin-left: 1%;\">\n                    <mat-chip-list aria-label=\"Fish selection\">\n                        <mat-chip *ngFor=\"let tag of blog.tags\">{{tag}}</mat-chip>\n                    </mat-chip-list>\n                </mat-card-actions> -->\n            </div>\n        </mat-card>\n        <!-- </div> -->\n        <!-- \n        <ng-template #placeholderNullPosts>\n            <div class=\"placeholderNullPosts\">\n                <h1>\n                    У вас еще нет созданных рецептов\n                </h1>\n                <img src=\"../../../assets/placeholders/placeholder-emptyposts-girl.jpg\" class=\"placeholderNullPosts-image\">\n            </div>\n        </ng-template> -->\n    </div>","<!-- <div *ngIf=\"blogEntriesLength > 0; else placeholderNullPosts\"> -->\n<div style=\"margin-top: 3%;\">\n    <mat-card>\n        В этом разделе собраны все рецепты, которые вы добавили в избранное. Другие пользователи не могут видеть\n        их.\n        <br>\n        <hr />\n        <p>В избранном рецептов: {{favEntries.totalDocs}}</p>\n    </mat-card>\n    <mat-card *ngFor=\"let blog of favEntries.docs\" class=\"card\">\n        <div>\n\n            <div style=\"display: flex;\" (click)=\"navigate(blog.blog._id)\">\n                <div>\n                    <img *ngIf=\"blog.blog.headerImage; else placeholderImage\"\n                        src=\"http://localhost:3000/api/blogs/image/{{blog.blog.headerImage}}\">\n                </div>\n                <ng-template #placeholderImage>\n                    <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\">\n                </ng-template>\n                <div style=\"margin-left: 30px;\">\n                    <h2>\n                        {{blog.blog.title}}\n                    </h2>\n                    <h4 class=\"crop-text-2\">{{blog.blog.description}}</h4>\n                    <small>Категория:</small>\n                    <h4>{{blog.blog.category.catTitle}}</h4>\n\n                </div>\n            </div>\n            <!-- <hr />\n            <mat-card-actions style=\"margin-left: 1%;\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                    <mat-chip *ngFor=\"let tag of blog.blog.tags\">{{tag}}</mat-chip>\n                </mat-chip-list>\n            </mat-card-actions> -->\n        </div>\n    </mat-card>\n    <!-- </div> -->\n    <!-- \n    <ng-template #placeholderNullPosts>\n        <div class=\"placeholderNullPosts\">\n            <h1>\n                У вас еще нет созданных рецептов\n            </h1>\n            <img src=\"../../../assets/placeholders/placeholder-emptyposts-girl.jpg\" class=\"placeholderNullPosts-image\">\n        </div>\n    </ng-template> -->\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-favorites',\n  templateUrl: './user-favorites.component.html',\n  styleUrls: ['./user-favorites.component.scss']\n})\nexport class UserFavoritesComponent implements OnInit {\n\n  @Input() favEntries;\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    console.log(this.favEntries);\n    \n  }\n\n  navigate(id) {\n    this.router.navigateByUrl('blogs/' + id);\n  }\n\n  navigateToUpdate(id) {\n    this.router.navigate(['update-blog/', id]);\n  }\n\n  // openDeleteDialog(blog): void {\n  //   // this.blogService.isBeDeleted = blogId;\n  //   const dialogRef = this.dialog.open(DeleleBlogComponent, {data: {blog}});\n  // }\n\n\n\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateBlogEntryComponent } from './components/blog/create-blog-entry/create-blog-entry.component';\r\nimport { UpdateBlogComponent } from './components/blog/update-blog/update-blog.component';\r\nimport { ViewBlogEntryComponent } from './components/blog/view-blog-entry/view-blog-entry.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { PersonalProfileComponent } from './components/user/personal-profile/personal-profile.component';\r\nimport { UpdateUserProfileComponent } from './components/user/update-user-profile/update-user-profile.component';\r\nimport { UserProfileComponent } from './components/user/user-profile/user-profile.component';\r\nimport { UsersComponent } from './components/user/users/users.component';\r\nimport { AdminGuard } from './guards/admin.guard';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\r\n    canActivate: [AuthGuard, AdminGuard]\r\n\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: 'users',\r\n    children: [\r\n      {\r\n        path: '',\r\n        component: UsersComponent\r\n      },\r\n      {\r\n        path: ':id',\r\n        component: UserProfileComponent\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: 'update-profile',\r\n    component: UpdateUserProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'update-blog/:id',\r\n    component: UpdateBlogComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'blogs/:id',\r\n    component: ViewBlogEntryComponent\r\n  },\r\n  {\r\n    path: 'favorites/:id',\r\n    component: ViewBlogEntryComponent\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: PersonalProfileComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'create-blog-entry',\r\n    component: CreateBlogEntryComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: '/home',\r\n    pathMatch: 'full'\r\n  }\r\n  \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Tag } from 'src/app/model/tag.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  constructor(private http: HttpClient) { }\n\n  getAllTags(): Observable<any> {\n    return this.http.get('/api/tags');\n  }\n\n  getOneTagById(blogId: string): Observable<Tag> {\n    return this.http.get('/api/tags' + blogId);\n  }\n\n  getOneByName(tagName: string): Observable<Tag> {\n    let params = new HttpParams();\n    params = params.append('tagName', String(tagName));\n    return this.http.get('/api/tags', {params}).pipe(\n      map((tags: Tag) => tags),\n      catchError(err => throwError(err))\n    )\n  }\n\n  createTag(tagDto: Tag): Observable<Tag> {\n    return this.http.post<Tag>('/api/tags', tagDto);\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Subject } from 'rxjs';\nimport { User } from './model/user.interface';\n\n\nexport const JWT_NAME = 'user-token';\n\n\n@Injectable()\nexport class ConfigService {\n\n  user: Object = null;\n\n\n  public _appConfig = new Subject<User>(); \n  constructor(private _http: HttpClient,\n              private jwtHelper: JwtHelperService) { }\n\n  getUserId(): string {\n    const token = localStorage.getItem(JWT_NAME);\n    if (token) {\n      const decoded = this.jwtHelper.decodeToken(token);\n      return decoded.user._id;\n    } else {\n      console.log('non authorized');\n    }\n  }\n\n  public loadConfig() {\n    let userId = this.getUserId();\n    if (userId) {\n      return this._http.get('/api/user/' + userId)\n      .toPromise()\n      .then(res=>{\n        this.user = res;\n        this._appConfig.next(this.user);\n      });\n    } else {\n      console.log('non authorized');\n    }\n \n  }\n\n  public getConfig() {\n    return this.user;\n  }\n}\n","import { Directive, HostListener } from '@angular/core';\nimport { CreateBlogEntryComponent } from './components/blog/create-blog-entry/create-blog-entry.component';\nimport { RecipeStepComponent } from './components/ui/recipe-step/recipe-step.component';\n\n@Directive({\n  selector: '[appStep]'\n})\nexport class StepDirective {\n\n  constructor(public recipeStep: CreateBlogEntryComponent) { }\n  @HostListener('click', ['$event'])\n  onClick() {\n    console.log('directive');\n    \n    // this.recipeStep.list.push(\"new task\")\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}