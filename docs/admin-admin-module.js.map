{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/admin/components/admin-recipie/admin-recipie.component.ts","./src/app/admin/components/admin-recipie/admin-recipie.component.html","./src/app/admin/components/admin-users/admin-users.component.ts","./src/app/admin/components/admin-users/admin-users.component.html","./src/app/admin/components/admin-recipie-details/admin-recipie-details.component.ts","./src/app/admin/components/admin-recipie-details/admin-recipie-details.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/list.js","./src/app/admin/components/owerview/owerview.component.html","./src/app/admin/components/owerview/owerview.component.ts","./src/app/admin/components/admin-main/admin-main.component.ts","./src/app/admin/components/admin-main/admin-main.component.html","./src/app/admin/components/admin-users-details/admin-users-details.component.ts","./src/app/admin/components/admin-users-details/admin-users-details.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js","./src/app/admin/admin.module.ts"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gDAAgD;AACjE,yBAAyB,wBAAwB;AACjD;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8EAA8E;AAClG;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAA4D;AAChF;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CAAC,gEAAU,2BAA2B;AACxP,qBAAqB,+DAAwB,EAAE,kIAAkI;AACjL,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB;AAC7B,QAAQ,4DAAqB,WAAW,8DAAO;AAC/C,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,oDAAoD;AAC3D,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,yKAAyK;AAChL,QAAQ,wDAAiB,6DAA6D,2BAA2B,EAAE,4DAA4D,0BAA0B,EAAE,8DAA8D,2BAA2B,EAAE;AACtS,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,mJAAmJ,0CAA0C,wEAAiC,yUAAyU;AACzjB,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,QAAQ,uDAAgB;AACxB,QAAQ,wDAAiB;AACzB,KAAK,EAAE,eAAe,gEAAgB,EAAE,oDAAW,EAAE,wEAAwB,yCAAyC;AACtH;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,+DAAiB,EAAE;AAC/B,KAAK,uCAAuC,OAAO,oDAAM,SAAS,gEAAU,4BAA4B;AACxG;AACA;AACA,eAAe,OAAO,0DAAY,sCAAsC;AACxE,aAAa,OAAO,0DAAY,oCAAoC;AACpE,cAAc,OAAO,6DAAe,SAAS,8DAAO,GAAG,oBAAoB,IAAI;AAC/E,aAAa,OAAO,uDAAS,mBAAmB;AAChD,wBAAwB,OAAO,mDAAK,EAAE;AACtC,aAAa,OAAO,mDAAK,EAAE;AAC3B,aAAa,OAAO,mDAAK,EAAE;AAC3B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,gBAAgB,OAAO,mDAAK,EAAE;AAC9B;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,+BAA+B,+DAAiB;AAChD,iCAAiC,qEAAuB;AACxD,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,+DAAwB,EAAE,GAAG;AAChG,sBAAsB,oDAAM;AAC5B,uBAAuB,gEAAU;AACjC,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,6DAAe;AACjC,mBAAmB,8DAAO,GAAG,oBAAoB;AACjD,SAAS;AACT,kBAAkB,uDAAS;AAC3B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,uEAAc;AACjD;AACA;AACA;AACA,iCAAiC;AACjC;AACA,8BAA8B,4CAAO;AACrC;AACA,iCAAiC;AACjC;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA,uCAAuC,uEAAc;AACrD;AACA;AACA;AACA;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,gEAAS;AAC9C;AACA,SAAS;AACT;AACA,kCAAkC,gEAAS,QAAQ,gEAAS;AAC5D;AACA,SAAS;AACT;AACA,0CAA0C,gEAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sGAAsG,gEAAS;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4EAAc;AAC1C;AACA,iBAAiB,2DAAK;AACtB,iBAAiB,2DAAK;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,uDAAC,qBAAqB,4EAAc;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,8DAAQ,gBAAgB,gEAAU;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"admin-admin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminMainComponent } from './components/admin-main/admin-main.component';\r\nimport { AdminRecipieDetailsComponent } from './components/admin-recipie-details/admin-recipie-details.component';\r\nimport { AdminRecipieComponent } from './components/admin-recipie/admin-recipie.component';\r\nimport { AdminUsersDetailsComponent } from './components/admin-users-details/admin-users-details.component';\r\nimport { AdminUsersComponent } from './components/admin-users/admin-users.component';\r\nimport { OwerviewComponent } from './components/owerview/owerview.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    // pathMatch: 'full',\r\n    component: OwerviewComponent,\r\n    children: [\r\n      {\r\n        path: 'admin-main',\r\n        component: AdminMainComponent\r\n      },\r\n      {\r\n        path: 'moderation',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component: AdminRecipieComponent\r\n          },\r\n          {\r\n            path: ':id',\r\n            component: AdminRecipieDetailsComponent\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        path: 'users',\r\n        children: [\r\n          {\r\n            path: '',\r\n            component:AdminUsersComponent\r\n          },\r\n          {\r\n            path: ':id',\r\n            component: AdminUsersDetailsComponent\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'admin-main',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { DeleteBlogAdminComponent } from 'src/app/components/ui/delete-blog-admin/delete-blog-admin.component';\nimport { DraftBlogAdminComponent } from 'src/app/components/ui/draft-blog-admin/draft-blog-admin.component';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-admin-recipie',\n  templateUrl: './admin-recipie.component.html',\n  styleUrls: ['./admin-recipie.component.scss']\n})\nexport class AdminRecipieComponent implements OnInit {\n\n\n  snackBarMessageAccepted = 'Рецепт был успешно опубликован!';\n  snackBarMessageRejected = 'Рецепт отклонен';\n  dataSource = null;\n\n  displayedColumns: string[] = ['title', 'createdAt', 'category', 'isRecipieAccepted'];\n\n  pageEvent: PageEvent;\n  \n\n\n  constructor(private adminService: AdminService,\n              private blogService: BlogService,\n              private functionService: FunctionService,\n              public dialog: MatDialog,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.initDataSource();\n  }\n\n  initDataSource() {\n    this.adminService.paginatePostsForModeration(1,10).pipe(\n      map((postData) => this.dataSource = postData)\n    ).subscribe();\n  }\n\n  acceptPost(blog) {\n    this.blogService.post(blog).pipe(\n      tap(() => this.functionService.openSnackBar(this.snackBarMessageAccepted))\n    ).subscribe();\n\n    this.adminService.updateIsAcceptedStatus(blog._id).subscribe();\n    window.location.reload();\n  }\n\n  OpenDraftDialog(blog) {\n    const dialogRef = this.dialog.open(DraftBlogAdminComponent, {data: {blog}});\n  }\n\n  openDeleteDialog(blog): void {\n    // this.blogService.isBeDeleted = blogId;\n    const dialogRef = this.dialog.open(DeleteBlogAdminComponent, {data: {blog}});\n  }\n\n  navigateToDetails(id) {\n    this.router.navigate(['./' + id], {relativeTo: this.activatedRoute});\n  }\n\n  onPaginateChange(event: PageEvent) {\n    let page = event.pageIndex;\n    let size = event.pageSize;\n\n    page = page + 1\n    this.adminService.paginatePostsForModeration(page, size).pipe(\n      map((postData) => this.dataSource = postData)\n    ).subscribe();\n   \n  }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"dataSource\" > \n        <div class=\"row row-cols-4\">\n            <mat-card *ngFor=\"let blog of dataSource.docs\"  class=\"col card\" [ngClass]=\"blog.isRecipieAccepted? 'accepted' : 'not-accepted'\">\n                <button *ngIf=\"!blog.isRecipieAccepted\" mat-icon-button [matMenuTriggerFor]=\"menu\" type=\"button\" aria-label=\"Users menu\" class=\"users-menu\">\n                    <mat-icon>more_vert</mat-icon>\n                  </button>\n                  <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                    <button mat-menu-item type=\"button\" (click)=\"acceptPost(blog)\">\n                      <mat-icon>done</mat-icon>\n                      <span >Опубликовать рецепт</span>\n                    </button>\n                    <button mat-menu-item (click)=\"OpenDraftDialog(blog)\">\n                      <mat-icon color=\"warn\">remove</mat-icon>\n                      <span class=\"delete-button\">Отклонить рецепт</span>\n                    </button>\n                    <button mat-menu-item (click)=\"openDeleteDialog(blog)\">\n                        <mat-icon color=\"warn\">delete</mat-icon>\n                        <span class=\"delete-button\">Удалить рецепт</span>\n                      </button>\n                  </mat-menu>\n                <div class=\"row\" (click)=\"navigateToDetails(blog._id)\">\n                    <div class=\"col\">\n                        <img class=\"image-img\" *ngIf=\"blog.headerImage; else placeholderImage\" src=\"http://localhost:3000/api/blogs/image/{{blog.headerImage}}\">\n                        <ng-template #placeholderImage>\n                            <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\">\n                        </ng-template>\n                    </div>\n                    <div class=\"col\">\n                            <h2>\n                                {{blog.title}}\n                            </h2>\n                            <small>Категория:</small>\n                            <p>{{blog.category.catTitle}}</p>\n                            <small>Автор: {{blog.authorId.name}}</small>\n                            <!-- <small style=\"margin-left: 15px;\">{{blog.likes}}</small> -->\n                          \n            \n                    </div>\n                \n               \n                </div>\n                <mat-card-actions>\n                    <div style=\"margin-left: 4%;\">\n                        Тэги:\n                    </div>\n                    <div class=\"col tag-div\">\n                        <mat-chip-list>\n                            <mat-chip\n                            *ngFor=\"let tag of blog.tags\">{{tag}}\n                            </mat-chip>\n                        </mat-chip-list> \n                    </div>\n                   \n                  </mat-card-actions>\n                <!-- <div style=\"display: flex;\"> -->\n              \n                   \n                <!-- </div> -->\n            </mat-card>\n        </div>\n\n        <mat-paginator \n        [length]=\"(dataSource).totalDocs\"\n        [pageSize]=\"(dataSource).limit\"\n        [pageSizeOptions]=\"[5, 10, 50, 100]\"\n        (page)=\"pageEvent = $event; onPaginateChange($event)\"\n        showFirstLastButtons>\n    \n        </mat-paginator>\n    </div> \n</div>\n\n<!-- \n<div class=\"container\">\n     <mat-form-field>\n        <mat-label>Введите имя пользователя</mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"filterValue\"\n        (input)=\"findByName(filterValue)\" placeholder=\"Введите имя пользователя\">\n    </mat-form-field> \n\n    <div *ngIf=\"dataSource$\">\n        <mat-table [dataSource]=\"(dataSource$ | async)\">\n            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n            <mat-row *matRowDef=\"let row; columns: displayedColumns\"(click)=\"navigateToProfile(row._id)\"></mat-row>\n\n                <ng-container matColumnDef=\"title\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>title</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">{{row.title}}</mat-cell>\n                </ng-container>\n\n                \n                <ng-container matColumnDef=\"createdAt\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>createdAt</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">{{row.createdAt}}</mat-cell>\n                </ng-container>\n\n                \n                <ng-container matColumnDef=\"category\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>category</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">{{row.category}}</mat-cell>\n                </ng-container>\n\n                \n                <ng-container matColumnDef=\"isRecipieAccepted\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>isRecipieAccepted</mat-header-cell>\n                    <mat-cell *matCellDef=\"let row\">{{row.isRecipieAccepted}}</mat-cell>\n                </ng-container>\n\n           \n                <ng-container matColumnDef=\"role\">\n                    <mat-header-cell *matHeaderCellDef mat-sort-header>Роль</mat-header-cell>\n                    <mat-cell [ngClass]=\"row.role == 'user' ? 'make-user' : 'make-admin'\" *matCellDef=\"let row\">{{row.role}}</mat-cell>\n                </ng-container>\n\n        </mat-table>\n\n        <mat-paginator [length]=\"dataSource.totalDocs\"\n                    [pageSize]=\"dataSource.limit\"\n                    [pageSizeOptions]=\"[5, 10, 50, 100]\"\n                    (page)=\"pageEvent = $event; onPaginateChange($event)\"\n                    showFirstLastButtons>\n        </mat-paginator> \n\n    </div>\n\n</div> -->\n\n","import { Component, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { UserData, UserService } from 'src/app/services/user-service/user.service';\n\n@Component({\n  selector: 'app-admin-users',\n  templateUrl: './admin-users.component.html',\n  styleUrls: ['./admin-users.component.scss']\n})\nexport class AdminUsersComponent implements OnInit {\n\n  filterValue: string = null;\n  dataSource: UserData = null;\n  pageEvent: PageEvent;\n  displayedColumns: string[] = ['name', 'nickname', 'email', 'role'];\n\n\n  constructor(private userService: UserService, private router: Router, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.initDataSource();\n  }\n\n  \n  initDataSource() {\n    this.userService.findAll(1,10).pipe(\n      map((userData: UserData) => this.dataSource = userData)\n    ).subscribe();\n  }\n\n  \n  onPaginateChange(event: PageEvent) {\n    let page = event.pageIndex;\n    let size = event.pageSize;\n\n    if(this.filterValue == null) {\n      page = page + 1\n      this.userService.findAll(page, size).pipe(\n        map((userData: UserData) => this.dataSource = userData)\n      ).subscribe();\n    } else {\n      page = page + 1\n      this.userService.paginateByName(page, size, this.filterValue).pipe(\n        map((userData: UserData) => this.dataSource = userData)\n      ).subscribe();\n    }\n   \n  }\n\n  findByName(nickname: string) { \n    this.userService.paginateByName(1, 10, nickname).pipe(\n      map((userData: UserData) => this.dataSource = userData)\n    ).subscribe();\n  }\n\n  navigateToProfile(id) {\n    this.router.navigate(['./' + id], {relativeTo: this.activatedRoute});\n  }\n\n\n}\n","<div class=\"container\">\n    <mat-form-field>\n        <mat-label>Введите имя пользователя</mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"filterValue\"\n        (input)=\"findByName(filterValue)\" placeholder=\"Введите имя пользователя\">\n    </mat-form-field>\n\n    <div *ngIf=\"dataSource\">\n        <div>\n            <mat-table [dataSource]=\"dataSource.docs\">\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                <mat-row *matRowDef=\"let row; columns: displayedColumns\" (click)=\"navigateToProfile(row._id)\"></mat-row>\n    \n                    <ng-container matColumnDef=\"id\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">{{row._id}}</mat-cell>\n                    </ng-container>\n    \n                    \n                    <ng-container matColumnDef=\"name\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Имя</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">{{row.name}}</mat-cell>\n                    </ng-container>\n    \n                    \n                    <ng-container matColumnDef=\"nickname\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Никнейм</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">{{row.nickname}}</mat-cell>\n                    </ng-container>\n    \n                    \n                    <ng-container matColumnDef=\"email\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\n                        <mat-cell *matCellDef=\"let row\">{{row.email}}</mat-cell>\n                    </ng-container>\n    \n                    \n                    <ng-container matColumnDef=\"role\">\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Роль</mat-header-cell>\n                        <mat-cell [ngClass]=\"row.role == 'user' ? 'make-user' : 'make-admin'\" *matCellDef=\"let row\">\n                            {{row.role}}\n                        </mat-cell>\n                    </ng-container>\n    \n            </mat-table>\n        </div>\n\n\n        <mat-paginator class=\"paginator-footer\" \n                    [length]=\"dataSource.totalDocs\"\n                    [pageSize]=\"dataSource.limit\"\n                    [pageSizeOptions]=\"[5, 10, 50, 100]\"\n                    (page)=\"pageEvent = $event; onPaginateChange($event)\"\n                    showFirstLastButtons>\n        </mat-paginator>\n\n    </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { DeleteBlogAdminComponent } from 'src/app/components/ui/delete-blog-admin/delete-blog-admin.component';\nimport { FullViewImageComponent } from 'src/app/components/ui/full-view-image/full-view-image.component';\nimport { BlogDto } from 'src/app/model/blog.interface';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { FunctionService } from 'src/app/services/function-service/function.service';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-admin-recipie-details',\n  templateUrl: './admin-recipie-details.component.html',\n  styleUrls: ['./admin-recipie-details.component.scss']\n})\nexport class AdminRecipieDetailsComponent implements OnInit {\n\n  snackBarMessageAccepted = 'Рецепт был успешно опубликован!';\n  snackBarMessageRejected = 'Рецепт отклонен';\n\n  blogDto$: Observable<BlogDto> = this.activatedRoute.params.pipe(\n    switchMap((params: Params) => {\n      const blogDtoId: string = (params['id']);\n      return this.adminService.findOnePostForModerate(blogDtoId).pipe(\n        map((blogDto: BlogDto) => blogDto),\n        tap((blogDto) => console.log(blogDto),\n        )\n      )\n    })\n  )\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private adminService: AdminService,\n    private blogService: BlogService,\n    private functionService: FunctionService,\n    public dialog: MatDialog\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n\n  acceptPost(blog) {\n    this.blogService.post(blog).pipe(\n      tap(() => this.functionService.openSnackBar(this.snackBarMessageAccepted))\n    ).subscribe();\n\n    this.adminService.updateIsAcceptedStatus(blog._id).subscribe();\n    window.location.reload();\n  }\n\n  rejectPost(blog) {\n    console.log(blog);\n    \n  }\n\n  openDeleteDialog(blog): void {\n    // this.blogService.isBeDeleted = blogId;\n    const dialogRef = this.dialog.open(DeleteBlogAdminComponent, {data: {blog}});\n  }\n\n  showFullImage(postImage): void {\n    const link = 'blogs/image/'\n    const dialogRef = this.dialog.open(FullViewImageComponent, {data: {link, postImage}});\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-2\"></div>\n        <div class=\"col\">\n            <div *ngIf=\"(blogDto$ | async) as post\" class=\"main-div\">\n                <mat-card class=\"card\">\n                    <button *ngIf=\"!post.isRecipieAccepted\"  mat-icon-button [matMenuTriggerFor]=\"menu\" type=\"button\" aria-label=\"Users menu\" class=\"users-menu\">\n                        <mat-icon>more_vert</mat-icon>\n                      </button>\n                      <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n                        <button mat-menu-item (click)=\"acceptPost(post)\">\n                          <mat-icon>done</mat-icon>\n                          <span >Опубликовать рецепт</span>\n                        </button>\n                        <button mat-menu-item (click)=\"rejectPost(post)\">\n                          <mat-icon color=\"warn\">remove</mat-icon>\n                          <span class=\"delete-button\">Отклонить рецепт</span>\n                        </button>\n                        <button mat-menu-item (click)=\"openDeleteDialog(post)\">\n                            <mat-icon color=\"warn\">delete</mat-icon>\n                            <span class=\"delete-button\">Удалить рецепт</span>\n                          </button>\n                      </mat-menu>\n                    <mat-card-header>\n                        <div class=\"col\">\n                            <div class=\"post-category-div\">\n                                <p class=\"text-center\">\n                                    &#9900; {{post.category.catTitle}} &#9900;\n                                </p>\n                            </div>\n                            <div>\n                                <h1 class=\"text-center\" style=\"text-transform: uppercase; margin-top: 3%; margin-bottom: 0;\">\n                                    {{post.title}}\n                                </h1>\n\n                            </div>\n                        </div>\n                    </mat-card-header>\n                    <hr  width=\"100%\"/>\n\n                    <mat-card-content>\n                        <div class=\"row\" >\n                            <div class=\"col\" >\n                                <img src=\"http://localhost:3000/api/blogs/image/{{post.headerImage}}\" (click)=\"showFullImage(post.headerImage)\" class=\"header-image\">\n                                <div class=\"ingredients\" style=\"margin-top: 3%;\">\n                                    <h2>Ингредиенты</h2>\n                                    <div *ngFor=\"let ing of post.ingredients; let y = index\" class=\"row\">\n                                        <div class=\"col-3\">\n                                             {{y+1}}\n                                            {{ing.ingredient.ingTitleRu}}</div>\n                                        <div class=\"col\">\n                                            <hr />\n                                        </div>\n                                        <div class=\"col-2\">\n                                            {{ing.quantity}}\n                                            {{ing.measure}}\n                                        </div>\n                                       \n                                     \n                                    </div>\n                                </div>\n                            </div>\n                            <div style=\"margin-left: 20px;\" class=\"col\">\n\n                                <div class=\"avatar-image\" >\n                                    <img *ngIf=\"post.authorId.profileImage; else placeholderImage\" src=\"http://localhost:3000/api/user/profile-image/{{post.authorId.profileImage}}\" class=\"user-image\">\n                                    <h3> {{post.authorId.name}}</h3>\n                                </div>\n                                <ng-template #placeholderImage>\n                                    <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\" class=\"user-image\">\n                                </ng-template>\n\n                                <hr  width=\"100%\"/>\n\n                                <div class=\"row\" >\n                                    <!-- <div class=\"col-3\"></div> -->\n                                    <div class=\"col\">\n                                        <img src=\"https://img.icons8.com/material-outlined/25/000000/shopping-cart-loaded.png\"/>\n                                    </div>\n                                    <div class=\"col\">\n                                        <img src=\"https://img.icons8.com/material-outlined/24/000000/salad-bowl.png\"/>\n                                        {{post.servings}}   \n                                    </div>\n                                    <div class=\"col timer-icon-text\">\n                                        <mat-icon mat-list-icon>timer \n                                        </mat-icon>\n                                        {{post.timeForCooking}} минут  \n                                    </div>\n                                    <!-- <div class=\"col-2\"></div> -->\n                                </div>\n\n                                <div >\n                                    <mat-card>\n                                        Энергетическая ценность\n                                    </mat-card>\n                                </div>\n                             \n                        \n                                \n                            </div>\n                        </div>\n                 \n                    </mat-card-content>\n                    <hr />\n                    <div class=\"steps\">\n                        <h2>Пошаговая инструкция</h2>\n                        <div  *ngFor=\"let step of post.steps; let i = index\" >\n                            <b style=\"margin-right: 2%;\"> \n                                {{i+1}}.\n                            </b>\n                            <div class=\"step-div\">\n                                \n                                 {{step.step}}\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"tags\" style=\"margin-top: 3%;\">\n                        <mat-chip-list aria-label=\"Fish selection\">\n                            <h3>Tags: </h3>\n\n                            <mat-chip\n                            *ngFor=\"let tag of post.tags\">{{tag}}</mat-chip>\n                        </mat-chip-list>\n                    </div>\n                    <div class=\"date\">\n                        {{post.createdAt | date}}\n                    </div>\n\n                    <mat-card-actions *ngIf=\"!post.isRecipieAccepted\">\n                        <hr/>\n\n                        <button mat-raised-button  (click)=\"openDeleteDialog(post)\" class=\"\">Рецепт нарушает правила сайта</button>\n\n                        <button mat-raised-button  (click)=\"rejectPost(post)\" class=\"reject-button\">Отклонить</button>\n                        <button mat-raised-button  (click)=\"acceptPost(post)\" class=\"accept-button\">Опубликовать</button>\n                      </mat-card-actions>\n                        \n                    \n\n              \n                   \n                </mat-card>\n            </div>\n        </div>\n        <div class=\"col-2\"></div>\n    \n    </div>\n    \n</div>\n","import { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, ViewChild, EventEmitter, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\n\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nclass MatListItemBase {\n}\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_NAV_LIST, useExisting: MatNavList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nclass MatList extends _MatListMixinBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_LIST, useExisting: MatList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_LIST, useExisting: MatList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_NAV_LIST,] }] },\n    { type: MatList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LIST,] }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_NAV_LIST]\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LIST]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectionListBase {\n}\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\nclass MatListOptionBase {\n}\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() { return this._color || this.selectionList.color; }\n    set color(newValue) { this._color = newValue; }\n    /** Value of the option */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(() => MatSelectionList),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSelectionList)]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            if (origin === 'keyboard' || origin === 'program') {\n                const activeIndex = this._keyManager.activeItemIndex;\n                if (!activeIndex || activeIndex === -1) {\n                    // If there is no active index, set focus to the first option.\n                    this._keyManager.setFirstItemActive();\n                }\n                else {\n                    // Otherwise, set focus to the active option.\n                    this._keyManager.setActiveItem(activeIndex);\n                }\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.FocusMonitor }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule,\n        MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","<mat-sidenav-container class=\"admin-container\" autosize>\r\n    <mat-sidenav #sidenav mode=\"side\" opened=\"true\">\r\n        <mat-nav-list>\r\n            <mat-list-item (click)=\"isExpanded = !isExpanded\">\r\n                <mat-icon mat-list-icon class=\"chevron-button sidenav-button\"  [ngClass]=\"{'rotated': isExpanded}\">chevron_right</mat-icon>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item [routerLink]=\"'admin-main'\">\r\n              <mat-icon mat-list-icon>home</mat-icon>\r\n              <span *ngIf=\"isExpanded\">Главная страница администратора</span>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item [routerLink]=\"'moderation'\">\r\n                <mat-icon mat-list-icon>assignment</mat-icon>\r\n                <span *ngIf=\"isExpanded\">Модерация рецептов</span>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item [routerLink]=\"'users'\">\r\n                <mat-icon mat-list-icon>supervisor_account</mat-icon>\r\n                <span *ngIf=\"isExpanded\">Список пользователей</span>\r\n            </mat-list-item>\r\n\r\n        \r\n\r\n\r\n        </mat-nav-list>\r\n    </mat-sidenav>\r\n\r\n        <div class=\"content\">\r\n            <mat-toolbar>\r\n                <h4>Привет, {{(currentUser$ | async).name}}!</h4>\r\n            </mat-toolbar>\r\n            <div style=\"background-color: #f7f7f7\">\r\n              <router-outlet ></router-outlet>\r\n            </div>\r\n        </div>\r\n</mat-sidenav-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { AuthenticationService } from 'src/app/services/authentification-service/authentication.service';\r\nimport { UserData, UserService } from 'src/app/services/user-service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-owerview',\r\n  templateUrl: './owerview.component.html',\r\n  styleUrls: ['./owerview.component.scss']\r\n})\r\nexport class OwerviewComponent implements OnInit {\r\n\r\n\r\n\r\n  isExpanded: boolean = false;\r\n\r\n  currentUser$ = this.authService.getCurrentUserObserv();\r\n\r\n  constructor(private authService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n \r\n  \r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { UserData, UserService } from 'src/app/services/user-service/user.service';\nimport { AdminService } from '../../services/admin.service';\n\n@Component({\n  selector: 'app-admin-main',\n  templateUrl: './admin-main.component.html',\n  styleUrls: ['./admin-main.component.scss']\n})\nexport class AdminMainComponent implements OnInit {\n\n  dataSource: UserData = null;\n  postSource = null;\n  displayedColumns: string[] = ['nickname', 'role'];\n  displayedColumnsPosts: string[] = ['title', 'category', 'isRecipieAccepted'];\n\n  constructor(private adminService: AdminService, \n              private router: Router,\n              private userService: UserService, \n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.initDataSource();\n  }\n\n  initDataSource() {\n    this.userService.findAll(1,10).pipe(\n      map((userData: UserData) => this.dataSource = userData)\n    ).subscribe();\n    this.adminService.paginatePostsForModeration(1,10).pipe(\n      map((postData) => this.postSource = postData)\n    ).subscribe();\n  }\n\n  navigateTo(value) {\n    this.router.navigate(['../admin/', value]);\n  }\n\n\n}\n","<div class=\"container main-div\">\n   <div class=\"col\">\n        <div class=\"row row-div\">\n            <div class=\"col\" *ngIf=\"postSource\">\n                <mat-card>\n                    <div class=\"row\" style=\"margin: 10% 5% 5% 5%;\">\n                        <div class=\"col\">\n                            <h1>{{postSource.totalDocs}}</h1>\n                            <p>Всего постов</p>\n                        </div>\n                        <div class=\"col-2\">\n                            <mat-icon>home</mat-icon>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col\">\n                <mat-card>\n                    <div class=\"row\" style=\"margin: 10% 5% 5% 5%;\">\n                        <div class=\"col\">\n                            <h1>50</h1>\n                            <p>text</p>\n                        </div>\n                        <div class=\"col-2\">\n                            <mat-icon>home</mat-icon>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col\">\n                <mat-card>\n                    <div class=\"row\"  *ngIf=\"dataSource\" style=\"margin: 10% 5% 5% 5%;\">\n                        <div class=\"col\">\n                            <h1>{{dataSource.totalDocs}}</h1>\n                            <p>Пользователей</p>\n                        </div>\n                        <div class=\"col-2\">\n                            <mat-icon>home</mat-icon>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col\">\n                <mat-card>\n                    <div class=\"row\" style=\"margin: 10% 5% 5% 5%;\">\n                        <div class=\"col\">\n                            <h1>50</h1>\n                            <p>text</p>\n                        </div>\n                        <div class=\"col-2\">\n                            <mat-icon>home</mat-icon>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n   </div>\n   <div class=\"col\" style=\"margin-top: 5%;\">\n        <div class=\"row\">\n            <div class=\"col\">\n                <mat-card>\n                    <mat-card-header class=\"card-container\">\n                        <mat-card-title>Последние рецепты для модерации</mat-card-title>\n                        <button class=\"see-more-button\" mat-raised-button (click)=\"navigateTo('moderation')\">\n                            <span>Посмотреть все</span>\n                            <mat-icon mat-list-icon>arrow_forward</mat-icon>\n                        </button>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div *ngIf=\"postSource\">\n                            <mat-table [dataSource]=\"postSource.docs\">\n                                <mat-header-row *matHeaderRowDef=\"displayedColumnsPosts\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumnsPosts\"></mat-row>\n\n                                    <ng-container matColumnDef=\"title\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>Название</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.title}}</mat-cell>\n                                    </ng-container>\n\n                                    \n                                    <ng-container matColumnDef=\"category\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>Категория</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.category.catTitle}}</mat-cell>\n                                    </ng-container>\n                        \n                                    \n                                    <ng-container matColumnDef=\"isRecipieAccepted\">\n                                        <mat-header-cell   *matHeaderCellDef mat-sort-header>Статус</mat-header-cell>\n                                        <mat-cell   *matCellDef=\"let row\"> <div [ngClass]=\"row.isRecipieAccepted ? 'accepted' : 'rejected'\"></div> </mat-cell>\n                                    </ng-container>\n                        \n                            </mat-table>\n                        \n                        </div>\n                      </mat-card-content>\n                </mat-card>\n            </div>\n            <div class=\"col-4\">\n                <mat-card>\n                    <mat-card-header class=\"card-container\">\n                        <mat-card-title>Пользователи</mat-card-title>\n                        <button class=\"see-more-button\" mat-raised-button type=\"button\" (click)=\"navigateTo('users')\">\n                            <span>Посмотреть все</span>\n                            <mat-icon mat-list-icon>arrow_forward</mat-icon>\n                        </button>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div *ngIf=\"dataSource\">\n                            <mat-table [dataSource]=\"dataSource.docs\">\n                                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n\n                                    <ng-container matColumnDef=\"nickname\">\n                                        <mat-header-cell *matHeaderCellDef mat-sort-header>Никнейм</mat-header-cell>\n                                        <mat-cell *matCellDef=\"let row\">{{row.nickname}}</mat-cell>\n                                    </ng-container>\n                        \n                                    \n                                    <ng-container matColumnDef=\"role\">\n                                        <mat-header-cell   *matHeaderCellDef mat-sort-header>Роль</mat-header-cell>\n                                        <mat-cell  [ngClass]=\"row.role == 'user' ? 'make-user' : 'make-admin'\" *matCellDef=\"let row\">{{row.role}}</mat-cell>\n                                    </ng-container>\n                        \n                            </mat-table>\n                        \n                        </div>\n                      </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { FullViewImageComponent } from 'src/app/components/ui/full-view-image/full-view-image.component';\nimport { BlogDto } from 'src/app/model/blog.interface';\nimport { User } from 'src/app/model/user.interface';\nimport { BlogService } from 'src/app/services/blog-service/blog.service';\nimport { UserService } from 'src/app/services/user-service/user.service';\n\n@Component({\n  selector: 'app-admin-users-details',\n  templateUrl: './admin-users-details.component.html',\n  styleUrls: ['./admin-users-details.component.scss']\n})\nexport class AdminUsersDetailsComponent implements OnInit {\n\n  panelOpenState = false;\n\n  private userId$: Observable<string> = this.activatedRoute.params.pipe(\n    map((params: Params) => (params['id']))\n  )\n\n  user$: Observable<User> = this.userId$.pipe(\n    switchMap((userId: string) => this.userService.findOne(userId)) \n  )\n\n  blogEntries$: Observable<BlogDto> = this.userId$.pipe(\n    switchMap((userId: string) => this.blogService.indexByUser(userId)),\n    tap((a) => console.log(a))\n  )\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private userService: UserService,\n    private blogService: BlogService,\n    public dialog: MatDialog\n\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  showFullImage(postImage): void {\n    const link = 'user/profile-image/'\n    const dialogRef = this.dialog.open(FullViewImageComponent, {data: {link, postImage}});\n  }\n\n}\n","<div class=\"container\">\n    <div *ngIf=\"(user$ | async) as user\" class=\"row\" style=\"padding-left: 2%; padding-right: 2%; margin: 0;\">\n        <div class=\"col-4\">\n            <mat-card class=\"avatar-image\">\n                <img *ngIf=\"user.profileImage; else placeholderImage\" src=\"http://localhost:3000/api/user/profile-image/{{user.profileImage}}\" (click)=\"showFullImage(user.profileImage)\" class=\"user-image\">\n            </mat-card>\n            <ng-template #placeholderImage>\n                <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\" class=\"user-image\">\n            </ng-template>\n        </div>\n        <div class=\"col\">\n            <mat-card class=\"user-info\">\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <small>Имя пользователя:</small>\n                        <h1>{{user.name}}</h1>\n                    </div>\n                    <div class=\"col\">\n                    </div>\n                    <div class=\"col d-flex align-items-center\"> \n                        \n                        <button class=\"block-user-button\">  \n                            Заблокировать пользователя\n                        </button>\n                    </div>\n                    \n                    <hr/>\n                    <small>Описание:</small>\n                    <h3> <p style=\"text-indent: 20px;\">\n                            {{user.userDescription}}\n                        </p>\n                    </h3>\n                    <hr/>\n\n                </div> \n                    <div class=\"row\">\n                        <div class=\"col-2\">\n                            <small>Роль:</small>\n                            <h3 [ngClass]=\"user.role == 'user' ? 'make-user' : 'make-admin'\"> \n                                {{user.role}}\n                            </h3>\n                            <a href=\"\" *ngIf=\"user.role == 'user'; else placeholderRole\">Назначить админом</a>\n                            <ng-template #placeholderRole>\n                                <a href=\"\">Понизить роль до user</a>\n                            </ng-template>\n                        </div>\n                        <div class=\"col-4\">\n                        </div>\n                        <div class=\"col\"></div>\n                       \n                    </div>\n            </mat-card>\n            <div>\n              \n            </div>\n        </div>\n        \n        <mat-accordion style=\"margin-top: 3%;\">\n            <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                                (closed)=\"panelOpenState = false\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    Рецепты пользователя\n                </mat-panel-title>\n                <mat-panel-description>\n                    {{panelOpenState ? 'Скрыть рецепты пользователя' : 'Показать рецепты пользователя'}}\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n                    <!-- <div *ngIf=\"blogEntriesLength > 0; else placeholderNullPosts\"> -->\n                        <div class=\"container\">\n                                <div class=\"row row-cols-4\">\n                                    <mat-card *ngFor=\"let blog of (blogEntries$ | async)\"  class=\"col card\">\n                                      \n                                        <div class=\"row\" (click)=\"navigateToDetails(blog._id)\">\n                                            <div class=\"col\">\n                                                <img class=\"image-img\" *ngIf=\"blog.headerImage; else placeholderImage\" src=\"http://localhost:3000/api/blogs/image/{{blog.headerImage}}\">\n                                                <ng-template #placeholderImage>\n                                                    <img src=\"../../../assets/placeholders/placeholder-blog-entry.jpg\">\n                                                </ng-template>\n                                            </div>\n                                            <div class=\"col\">\n                                                    <h2>\n                                                        {{blog.title}}\n                                                    </h2>\n                                                    <small>Категория:</small>\n                                                    <p>{{blog.category.catTitle}}</p>\n                                                   \n                                                  \n                                    \n                                            </div>\n                                        \n                                       \n                                        </div>\n                                        <mat-card-actions>\n                                            <div style=\"margin-left: 4%;\">\n                                                Тэги:\n                                            </div>\n                                            <div class=\"col tag-div\">\n                                                <mat-chip-list>\n                                                    <mat-chip\n                                                    *ngFor=\"let tag of blog.tags\">{{tag}}\n                                                    </mat-chip>\n                                                </mat-chip-list> \n                                            </div>\n                                           \n                                          </mat-card-actions>\n                                        <!-- <div style=\"display: flex;\"> -->\n                                      \n                                           \n                                        <!-- </div> -->\n                                    </mat-card>\n                                </div>\n                        \n                                <!-- <mat-paginator \n                                [length]=\"(dataSource).totalDocs\"\n                                [pageSize]=\"(dataSource).limit\"\n                                [pageSizeOptions]=\"[5, 10, 50, 100]\"\n                                (page)=\"pageEvent = $event; onPaginateChange($event)\"\n                                showFirstLastButtons>\n                            \n                                </mat-paginator> -->\n                        </div>\n                        \n                        \n    \n            </mat-expansion-panel>\n        </mat-accordion>\n      </div>\n</div>\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() { return this._vertical; }\n    set vertical(value) { this._vertical = coerceBooleanProperty(value); }\n    /** Whether the divider is an inset divider. */\n    get inset() { return this._inset; }\n    set inset(value) { this._inset = coerceBooleanProperty(value); }\n}\nMatDivider.ɵfac = function MatDivider_Factory(t) { return new (t || MatDivider)(); };\nMatDivider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDivider, selectors: [[\"mat-divider\"]], hostAttrs: [\"role\", \"separator\", 1, \"mat-divider\"], hostVars: 7, hostBindings: function MatDivider_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-divider-vertical\", ctx.vertical)(\"mat-divider-horizontal\", !ctx.vertical)(\"mat-divider-inset\", ctx.inset);\n    } }, inputs: { vertical: \"vertical\", inset: \"inset\" }, decls: 0, vars: 0, template: function MatDivider_Template(rf, ctx) { }, styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatDivider.propDecorators = {\n    vertical: [{ type: Input }],\n    inset: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDivider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-divider',\n                host: {\n                    'role': 'separator',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-divider-vertical]': 'vertical',\n                    '[class.mat-divider-horizontal]': '!vertical',\n                    '[class.mat-divider-inset]': 'inset',\n                    'class': 'mat-divider'\n                },\n                template: '',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n            }]\n    }], function () { return []; }, { vertical: [{\n            type: Input\n        }], inset: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDividerModule {\n}\nMatDividerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatDividerModule });\nMatDividerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatDividerModule_Factory(t) { return new (t || MatDividerModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatDividerModule, { declarations: function () { return [MatDivider]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatDivider, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatDividerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatDivider, MatCommonModule],\n                declarations: [MatDivider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n//# sourceMappingURL=divider.js.map","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { OwerviewComponent } from './components/owerview/owerview.component';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport { AdminRecipieComponent } from './components/admin-recipie/admin-recipie.component';\r\nimport { AdminUsersComponent } from './components/admin-users/admin-users.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { AdminMainComponent } from './components/admin-main/admin-main.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport { AdminService } from './services/admin.service';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport { AdminRecipieDetailsComponent } from './components/admin-recipie-details/admin-recipie-details.component';\r\nimport { AdminUsersDetailsComponent } from './components/admin-users-details/admin-users-details.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [OwerviewComponent, AdminRecipieComponent, AdminUsersComponent, AdminMainComponent, AdminRecipieDetailsComponent, AdminUsersDetailsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n    //Angular Material Modules\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatExpansionModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatPaginatorModule,\r\n    MatMenuModule\r\n  ],\r\n  providers: [\r\n    AdminService\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n"],"sourceRoot":"webpack:///"}